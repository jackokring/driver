/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Fri Aug 03 06:56:41 CEST 2012 ----! */

package com.jogamp.opencl.llb;

import com.jogamp.opencl.llb.impl.BuildProgramCallback;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * Java bindings to OpenCL programs.
  * @author Michael Bien, GlueGen, et al.
  */
public interface CLProgramBinding {

  public static final int CL_BUILD_PROGRAM_FAILURE = -11;
  public static final int CL_PROGRAM_REFERENCE_COUNT = 0x1160;
  public static final int CL_PROGRAM_CONTEXT = 0x1161;
  public static final int CL_PROGRAM_NUM_DEVICES = 0x1162;
  public static final int CL_PROGRAM_DEVICES = 0x1163;
  public static final int CL_PROGRAM_SOURCE = 0x1164;
  public static final int CL_PROGRAM_BINARY_SIZES = 0x1165;
  public static final int CL_PROGRAM_BINARIES = 0x1166;
  public static final int CL_PROGRAM_BUILD_STATUS = 0x1181;
  public static final int CL_PROGRAM_BUILD_OPTIONS = 0x1182;
  public static final int CL_PROGRAM_BUILD_LOG = 0x1183;
  public static final int CL_BUILD_SUCCESS = 0;
  public static final int CL_BUILD_NONE = -1;
  public static final int CL_BUILD_ERROR = -2;
  public static final int CL_BUILD_IN_PROGRESS = -3;

  /** Interface to C language function: <br> <code> cl_program {@native clCreateProgramWithBinary}(cl_context context, cl_uint num_devices, cl_device_id *  device_list, const size_t *  lengths, const unsigned char *  *  binaries, cl_int *  binary_status, cl_int *  errcode_ret); </code> 
      @param device_list a direct only {@link com.jogamp.common.nio.PointerBuffer}
      @param lengths a direct only {@link com.jogamp.common.nio.PointerBuffer}
      @param binaries a direct only {@link com.jogamp.common.nio.PointerBuffer}
      @param binary_status a direct only {@link java.nio.IntBuffer}
      @param errcode_ret a direct only {@link java.nio.IntBuffer}   */
  public long clCreateProgramWithBinary(long context, int num_devices, PointerBuffer device_list, PointerBuffer lengths, PointerBuffer binaries, IntBuffer binary_status, IntBuffer errcode_ret);

  /** Interface to C language function: <br> <code> cl_program {@native clCreateProgramWithSource}(cl_context context, cl_uint count, const char *  *  strings, const size_t *  lengths, cl_int *  errcode_ret); </code> 
      @param lengths a direct only {@link com.jogamp.common.nio.PointerBuffer}
      @param errcode_ret a direct only {@link java.nio.IntBuffer}   */
  public long clCreateProgramWithSource(long context, int count, String[] strings, PointerBuffer lengths, IntBuffer errcode_ret);

  /** Interface to C language function: <br> <code> cl_int {@native clGetProgramBuildInfo}(cl_program program, cl_device_id device, cl_program_build_info param_name, size_t param_value_size, void *  param_value, size_t *  param_value_size_ret); </code> 
      @param param_value a direct only {@link java.nio.Buffer}
      @param param_value_size_ret a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public int clGetProgramBuildInfo(long program, long device, int param_name, long param_value_size, Buffer param_value, PointerBuffer param_value_size_ret);

  /** Interface to C language function: <br> <code> cl_int {@native clGetProgramInfo}(cl_program program, cl_program_info param_name, size_t param_value_size, void *  param_value, size_t *  param_value_size_ret); </code> 
      @param param_value a direct only {@link java.nio.Buffer}
      @param param_value_size_ret a direct only {@link com.jogamp.common.nio.PointerBuffer}   */
  public int clGetProgramInfo(long program, int param_name, long param_value_size, Buffer param_value, PointerBuffer param_value_size_ret);

  /** Interface to C language function: <br> <code> cl_int {@native clReleaseProgram}(cl_program program); </code>    */
  public int clReleaseProgram(long program);

  /** Interface to C language function: <br> <code> cl_int {@native clRetainProgram}(cl_program program); </code>    */
  public int clRetainProgram(long program);


  // --- Begin CustomJavaCode .cfg declarations

  /** Interface to C language function: <br> <code> int32_t {@native clBuildProgram}(cl_program, uint32_t, cl_device_id * , const char * , void (*pfn_notify)(cl_program, void *user_data), void * ); </code>    */
  public int clBuildProgram(long program, int deviceCount, PointerBuffer devices, String options, BuildProgramCallback cb);
  // ---- End CustomJavaCode .cfg declarations

} // end of class CLProgramBinding
