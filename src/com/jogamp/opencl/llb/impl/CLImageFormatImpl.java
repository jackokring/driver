/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/procaddress/ProcAddressEmitter.java on Fri Aug 03 06:57:18 CEST 2012 ----! */


package com.jogamp.opencl.llb.impl;

import java.nio.*;

import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import jogamp.common.os.MachineDescriptionRuntime;

import com.jogamp.opencl.llb.*;
import com.jogamp.opencl.llb.gl.CLGL;

 /**
  * Struct accessor for cl_image_format.
  * @author Michael Bien, GlueGen, et al.
  */
public class CLImageFormatImpl {

  StructAccessor accessor;

  private static final int mdIdx = MachineDescriptionRuntime.getStatic().ordinal();

  private static final int[] CLImageFormatImpl_size = new int[] { 8 /* ARMle_EABI */, 8 /* X86_32_UNIX */, 8 /* X86_64_UNIX */, 8 /* X86_32_MACOS */, 8 /* X86_32_WINDOWS */, 8 /* X86_64_WINDOWS */  };
  private static final int[] imageChannelOrder_offset = new int[] { 0 /* ARMle_EABI */, 0 /* X86_32_UNIX */, 0 /* X86_64_UNIX */, 0 /* X86_32_MACOS */, 0 /* X86_32_WINDOWS */, 0 /* X86_64_WINDOWS */ };
  private static final int[] imageChannelDataType_offset = new int[] { 4 /* ARMle_EABI */, 4 /* X86_32_UNIX */, 4 /* X86_64_UNIX */, 4 /* X86_32_MACOS */, 4 /* X86_32_WINDOWS */, 4 /* X86_64_WINDOWS */ };

  public static int size() {
    return CLImageFormatImpl_size[mdIdx];
  }

  public static CLImageFormatImpl create() {
    return create(Buffers.newDirectByteBuffer(size()));
  }

  public static CLImageFormatImpl create(java.nio.ByteBuffer buf) {
      return new CLImageFormatImpl(buf);
  }

  CLImageFormatImpl(java.nio.ByteBuffer buf) {
    accessor = new StructAccessor(buf);
  }

  public java.nio.ByteBuffer getBuffer() {
    return accessor.getBuffer();
  }

  public CLImageFormatImpl setImageChannelOrder(int val) {
    accessor.setIntAt(imageChannelOrder_offset[mdIdx], val);
    return this;
  }

  public int getImageChannelOrder() {
    return accessor.getIntAt(imageChannelOrder_offset[mdIdx]);
  }

  public CLImageFormatImpl setImageChannelDataType(int val) {
    accessor.setIntAt(imageChannelDataType_offset[mdIdx], val);
    return this;
  }

  public int getImageChannelDataType() {
    return accessor.getIntAt(imageChannelDataType_offset[mdIdx]);
  }
}
