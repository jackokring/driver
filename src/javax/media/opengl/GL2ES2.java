/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Fri Aug 03 06:27:01 CEST 2012 ----! */

package javax.media.opengl;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import java.io.PrintStream;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * <P> 
  * Interface containing the common subset of GL3, GL2 and GLES2.<br>
  * This interface reflects only the programmable shader functionality of desktop and embedded OpenGL<br>
  * </P>
  */
public interface GL2ES2 extends GL{

  /** Part of <code>GL_ES_VERSION_2_0</code>, <code>GL_ARB_imaging</code> */
  public static final int GL_CONSTANT_COLOR = 0x8001;
  /** Part of <code>GL_ES_VERSION_2_0</code>, <code>GL_ARB_imaging</code> */
  public static final int GL_ONE_MINUS_CONSTANT_COLOR = 0x8002;
  /** Part of <code>GL_ES_VERSION_2_0</code>, <code>GL_ARB_imaging</code> */
  public static final int GL_CONSTANT_ALPHA = 0x8003;
  /** Part of <code>GL_ES_VERSION_2_0</code>, <code>GL_ARB_imaging</code> */
  public static final int GL_ONE_MINUS_CONSTANT_ALPHA = 0x8004;
  /** Part of <code>GL_ES_VERSION_2_0</code>, <code>GL_ARB_imaging</code> */
  public static final int GL_BLEND_COLOR = 0x8005;
  /** Part of <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STREAM_DRAW = 0x88E0;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_CURRENT_VERTEX_ATTRIB = 0x8626;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_BACK_FUNC = 0x8800;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_BACK_FAIL = 0x8801;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_BACK_PASS_DEPTH_PASS = 0x8803;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_BACK_REF = 0x8CA3;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_BACK_VALUE_MASK = 0x8CA4;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_BACK_WRITEMASK = 0x8CA5;
  /** Part of <code>GL_VERSION_1_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_INT = 0x1404;
  /** Part of <code>GL_VERSION_1_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_DEPTH_COMPONENT = 0x1902;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_FRAGMENT_SHADER = 0x8B30;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_SHADER = 0x8B31;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MAX_VERTEX_ATTRIBS = 0x8869;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MAX_VERTEX_UNIFORM_VECTORS = 0x8DFB;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MAX_VARYING_VECTORS = 0x8DFC;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8B4D;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8B4C;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MAX_TEXTURE_IMAGE_UNITS = 0x8872;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MAX_FRAGMENT_UNIFORM_VECTORS = 0x8DFD;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_SHADER_TYPE = 0x8B4F;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_DELETE_STATUS = 0x8B80;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_LINK_STATUS = 0x8B82;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VALIDATE_STATUS = 0x8B83;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_ATTACHED_SHADERS = 0x8B85;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_ACTIVE_UNIFORMS = 0x8B86;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_ACTIVE_UNIFORM_MAX_LENGTH = 0x8B87;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_ACTIVE_ATTRIBUTES = 0x8B89;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_ACTIVE_ATTRIBUTE_MAX_LENGTH = 0x8B8A;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_SHADING_LANGUAGE_VERSION = 0x8B8C;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_CURRENT_PROGRAM = 0x8B8D;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_FLOAT_VEC2 = 0x8B50;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_FLOAT_VEC3 = 0x8B51;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_FLOAT_VEC4 = 0x8B52;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_INT_VEC2 = 0x8B53;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_INT_VEC3 = 0x8B54;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_INT_VEC4 = 0x8B55;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_BOOL = 0x8B56;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_BOOL_VEC2 = 0x8B57;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_BOOL_VEC3 = 0x8B58;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_BOOL_VEC4 = 0x8B59;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_FLOAT_MAT2 = 0x8B5A;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_FLOAT_MAT3 = 0x8B5B;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_FLOAT_MAT4 = 0x8B5C;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_SAMPLER_2D = 0x8B5E;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_SAMPLER_CUBE = 0x8B60;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_SIZE = 0x8623;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_TYPE = 0x8625;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886A;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_POINTER = 0x8645;
  /** Part of <code>GL_VERSION_1_5</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889F;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_COMPILE_STATUS = 0x8B81;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_INFO_LOG_LENGTH = 0x8B84;
  /** Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_SHADER_SOURCE_LENGTH = 0x8B88;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_SHADER_COMPILER = 0x8DFA;
  /** Part of <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_SHADER_BINARY_FORMATS = 0x8DF8;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_NUM_SHADER_BINARY_FORMATS = 0x8DF9;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_LOW_FLOAT = 0x8DF0;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MEDIUM_FLOAT = 0x8DF1;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_HIGH_FLOAT = 0x8DF2;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_LOW_INT = 0x8DF3;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_MEDIUM_INT = 0x8DF4;
  /** Part of <code>GL_ARB_ES2_compatibility</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_HIGH_INT = 0x8DF5;
  /** Part of <code>GL_VERSION_1_0</code>, <code>GL_ES_VERSION_2_0</code> */
  public static final int GL_STENCIL_INDEX = 0x1901;
  /** Part of <code>GL_ARB_get_program_binary</code>; <code>GL_OES_get_program_binary</code> */
  public static final int GL_PROGRAM_BINARY_LENGTH = 0x8741;
  /** Part of <code>GL_ARB_get_program_binary</code>; <code>GL_OES_get_program_binary</code> */
  public static final int GL_NUM_PROGRAM_BINARY_FORMATS = 0x87FE;
  /** Part of <code>GL_ARB_get_program_binary</code>; <code>GL_OES_get_program_binary</code> */
  public static final int GL_PROGRAM_BINARY_FORMATS = 0x87FF;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_OES_standard_derivatives</code> */
  public static final int GL_FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8B8B;
  /** Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code> */
  public static final int GL_TEXTURE_WRAP_R = 0x8072;
  /** Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code> */
  public static final int GL_TEXTURE_3D = 0x806F;
  /** Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code> */
  public static final int GL_TEXTURE_BINDING_3D = 0x806A;
  /** Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code> */
  public static final int GL_MAX_3D_TEXTURE_SIZE = 0x8073;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_OES_texture_3D</code> */
  public static final int GL_SAMPLER_3D = 0x8B5F;
  /** Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_vertex_type_10_10_10_2</code> */
  public static final int GL_UNSIGNED_INT_10_10_10_2 = 0x8DF6;
  /** Part of <code>GL_OES_vertex_type_10_10_10_2</code> */
  public static final int GL_INT_10_10_10_2 = 0x8DF7;
  /** Part of <code>GL_VERSION_3_0</code>; <code>GL_ARB_texture_float</code>; <code>GL_EXT_color_buffer_half_float</code> */
  public static final int GL_RGBA16F = 0x881A;
  /** Part of <code>GL_VERSION_3_0</code>; <code>GL_ARB_texture_float</code>; <code>GL_EXT_texture_storage</code>, <code>GL_EXT_color_buffer_half_float</code> */
  public static final int GL_RGB16F = 0x881B;
  /** Part of <code>GL_ARB_texture_rg</code>; <code>GL_EXT_color_buffer_half_float</code> */
  public static final int GL_RG16F = 0x822F;
  /** Part of <code>GL_ARB_texture_rg</code>; <code>GL_EXT_color_buffer_half_float</code> */
  public static final int GL_R16F = 0x822D;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_EXT_color_buffer_half_float</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_ARB_texture_float</code>; <code>GL_EXT_color_buffer_half_float</code> */
  public static final int GL_UNSIGNED_NORMALIZED = 0x8C17;
  /** Part of <code>GL_ARB_occlusion_query2</code>; <code>GL_EXT_occlusion_query_boolean</code> */
  public static final int GL_ANY_SAMPLES_PASSED = 0x8C2F;
  /** Part of <code>GL_EXT_occlusion_query_boolean</code> */
  public static final int GL_ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8D6A;
  /** Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code> */
  public static final int GL_CURRENT_QUERY = 0x8865;
  /** Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code> */
  public static final int GL_QUERY_RESULT = 0x8866;
  /** Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code> */
  public static final int GL_QUERY_RESULT_AVAILABLE = 0x8867;
  /** Part of <code>GL_EXT_robustness</code> */
  public static final int GL_CONTEXT_ROBUST_ACCESS = 0x90F3;
  /** Part of <code>GL_ARB_separate_shader_objects</code>; <code>GL_EXT_separate_shader_objects</code> */
  public static final int GL_VERTEX_SHADER_BIT = 0x00000001;
  /** Part of <code>GL_ARB_separate_shader_objects</code>; <code>GL_EXT_separate_shader_objects</code> */
  public static final int GL_FRAGMENT_SHADER_BIT = 0x00000002;
  /** Part of <code>GL_ARB_separate_shader_objects</code>; <code>GL_EXT_separate_shader_objects</code> */
  public static final int GL_PROGRAM_SEPARABLE = 0x8258;
  /** Part of <code>GL_ARB_separate_shader_objects</code>; <code>GL_EXT_separate_shader_objects</code> */
  public static final int GL_ACTIVE_PROGRAM = 0x8259;
  /** Part of <code>GL_ARB_separate_shader_objects</code>; <code>GL_EXT_separate_shader_objects</code> */
  public static final int GL_PROGRAM_PIPELINE_BINDING = 0x825A;
  /** Part of <code>GL_VERSION_1_4</code>; <code>GL_EXT_shadow_samplers</code> */
  public static final int GL_TEXTURE_COMPARE_MODE = 0x884C;
  /** Part of <code>GL_VERSION_1_4</code>; <code>GL_EXT_shadow_samplers</code> */
  public static final int GL_TEXTURE_COMPARE_FUNC = 0x884D;
  /** Part of <code>GL_VERSION_3_0</code>; <code>GL_EXT_shadow_samplers</code> */
  public static final int GL_COMPARE_REF_TO_TEXTURE = 0x884E;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_EXT_shadow_samplers</code> */
  public static final int GL_SAMPLER_2D_SHADOW = 0x8B62;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_EXT_sRGB</code> */
  public static final int GL_FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210;
  /** Part of <code>GL_VERSION_1_0</code>; <code>GL_EXT_texture_rg</code> */
  public static final int GL_RED = 0x1903;
  /** Part of <code>GL_ARB_texture_rg</code>; <code>GL_EXT_texture_rg</code> */
  public static final int GL_RG = 0x8227;
  /** Part of <code>GL_ARB_texture_rg</code>; <code>GL_EXT_texture_rg</code> */
  public static final int GL_R8 = 0x8229;
  /** Part of <code>GL_ARB_texture_rg</code>; <code>GL_EXT_texture_rg</code> */
  public static final int GL_RG8 = 0x822B;
  /** Part of <code>GL_EXT_texture_storage</code> */
  public static final int GL_BGRA8_EXT = 0x93A1;
  /** Part of <code>GL_VERSION_1_2</code>; <code>GL_EXT_texture_type_2_10_10_10_REV</code> */
  public static final int GL_UNSIGNED_INT_2_10_10_10_REV = 0x8368;
  /** Part of <code>GL_VERSION_1_0</code>, <code>GL_EXT_unpack_subimage</code> */
  public static final int GL_UNPACK_ROW_LENGTH = 0x0CF2;
  /** Part of <code>GL_VERSION_1_0</code>, <code>GL_EXT_unpack_subimage</code> */
  public static final int GL_UNPACK_SKIP_ROWS = 0x0CF3;
  /** Part of <code>GL_VERSION_1_0</code>, <code>GL_EXT_unpack_subimage</code> */
  public static final int GL_UNPACK_SKIP_PIXELS = 0x0CF4;
  /** Part of <code>GL_DMP_shader_binary</code> */
  public static final int GL_SHADER_BINARY_DMP = 0x9250;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_MAX_DRAW_BUFFERS = 0x8824;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER0 = 0x8825;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER1 = 0x8826;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER2 = 0x8827;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER3 = 0x8828;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER4 = 0x8829;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER5 = 0x882A;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER6 = 0x882B;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER7 = 0x882C;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER8 = 0x882D;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER9 = 0x882E;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER10 = 0x882F;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER11 = 0x8830;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER12 = 0x8831;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER13 = 0x8832;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER14 = 0x8833;
  /** Part of <code>GL_VERSION_2_0</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_DRAW_BUFFER15 = 0x8834;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT1 = 0x8CE1;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT2 = 0x8CE2;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT3 = 0x8CE3;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT4 = 0x8CE4;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT5 = 0x8CE5;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT6 = 0x8CE6;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT7 = 0x8CE7;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT8 = 0x8CE8;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT9 = 0x8CE9;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT10 = 0x8CEA;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT11 = 0x8CEB;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT12 = 0x8CEC;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT13 = 0x8CED;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT14 = 0x8CEE;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_draw_buffers</code> */
  public static final int GL_COLOR_ATTACHMENT15 = 0x8CEF;
  /** Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_NV_fbo_color_attachments</code> */
  public static final int GL_MAX_COLOR_ATTACHMENTS = 0x8CDF;

  /** Entry point to C language function: <code> void {@native glAttachShader}(GLuint program, GLuint shader); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glAttachShader(int program, int shader);

  /** Entry point to C language function: <code> void {@native glBeginQueryEXT}(GLenum target, GLuint id); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>   */
  public void glBeginQuery(int target, int id);

  /** Entry point to C language function: <code> void {@native glBindAttribLocation}(GLuint program, GLuint index, const GLchar *  name); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glBindAttribLocation(int program, int index, String name);

  /** Entry point to C language function: <code> void {@native glBlendColor}(GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha); </code> <br>Part of <code>GL_VERSION_1_2</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glBlendColor(float red, float green, float blue, float alpha);

  /** Entry point to C language function: <code> void {@native glCompileShader}(GLuint shader); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glCompileShader(int shader);

  /** Entry point to C language function: <code> void {@native glCompressedTexImage3DOES}(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *  data); </code> <br>Part of <code>GL_VERSION_1_3</code>; <code>GL_OES_texture_3D</code>
      @param data a direct or array-backed {@link java.nio.Buffer}   */
  public void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, Buffer data);

  /** Entry point to C language function: <code> void {@native glCompressedTexImage3DOES}(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLsizei imageSize, const GLvoid *  data); </code> <br>Part of <code>GL_VERSION_1_3</code>; <code>GL_OES_texture_3D</code>   */
  public void glCompressedTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int imageSize, long data_buffer_offset);

  /** Entry point to C language function: <code> void {@native glCompressedTexSubImage3DOES}(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *  data); </code> <br>Part of <code>GL_VERSION_1_3</code>; <code>GL_OES_texture_3D</code>
      @param data a direct or array-backed {@link java.nio.Buffer}   */
  public void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, Buffer data);

  /** Entry point to C language function: <code> void {@native glCompressedTexSubImage3DOES}(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLsizei imageSize, const GLvoid *  data); </code> <br>Part of <code>GL_VERSION_1_3</code>; <code>GL_OES_texture_3D</code>   */
  public void glCompressedTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int imageSize, long data_buffer_offset);

  /** Entry point to C language function: <code> void {@native glCopyTexSubImage3DOES}(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLint x, GLint y, GLsizei width, GLsizei height); </code> <br>Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code>   */
  public void glCopyTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int x, int y, int width, int height);

  /** Entry point to C language function: <code> GLuint {@native glCreateProgram}(void); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public int glCreateProgram();

  /** Entry point to C language function: <code> GLuint {@native glCreateShader}(GLenum type); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public int glCreateShader(int type);

  /** Entry point to C language function: <code> void {@native glDeleteProgram}(GLuint program); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glDeleteProgram(int program);

  /** Entry point to C language function: <code> void {@native glDeleteQueriesEXT}(GLsizei n, const GLuint *  ids); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>
      @param ids a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glDeleteQueries(int n, IntBuffer ids);

  /** Entry point to C language function: <code> void {@native glDeleteQueriesEXT}(GLsizei n, const GLuint *  ids); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>   */
  public void glDeleteQueries(int n, int[] ids, int ids_offset);

  /** Entry point to C language function: <code> void {@native glDeleteShader}(GLuint shader); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glDeleteShader(int shader);

  /** Entry point to C language function: <code> void {@native glDetachShader}(GLuint program, GLuint shader); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glDetachShader(int program, int shader);

  /** Entry point to C language function: <code> void {@native glDisableVertexAttribArray}(GLuint index); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glDisableVertexAttribArray(int index);

  /** Entry point to C language function: <code> void {@native glEnableVertexAttribArray}(GLuint index); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glEnableVertexAttribArray(int index);

  /** Entry point to C language function: <code> void {@native glEndQueryEXT}(GLenum target); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>   */
  public void glEndQuery(int target);

  /** Entry point to C language function: <code> void {@native glFramebufferTexture3DOES}(GLenum target, GLenum attachment, GLenum textarget, GLuint texture, GLint level, GLint zoffset); </code> <br>Part of <code>GL_ARB_framebuffer_object</code>; <code>GL_OES_texture_3D</code>   */
  public void glFramebufferTexture3D(int target, int attachment, int textarget, int texture, int level, int zoffset);

  /** Entry point to C language function: <code> void {@native glGenQueriesEXT}(GLsizei n, GLuint *  ids); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>
      @param ids a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGenQueries(int n, IntBuffer ids);

  /** Entry point to C language function: <code> void {@native glGenQueriesEXT}(GLsizei n, GLuint *  ids); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>   */
  public void glGenQueries(int n, int[] ids, int ids_offset);

  /** Entry point to C language function: <code> void {@native glGetActiveAttrib}(GLuint program, GLuint index, GLsizei bufsize, GLsizei *  length, GLint *  size, GLenum *  type, GLchar *  name); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param size a direct or array-backed {@link java.nio.IntBuffer}
      @param type a direct or array-backed {@link java.nio.IntBuffer}
      @param name a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetActiveAttrib(int program, int index, int bufsize, IntBuffer length, IntBuffer size, IntBuffer type, ByteBuffer name);

  /** Entry point to C language function: <code> void {@native glGetActiveAttrib}(GLuint program, GLuint index, GLsizei bufsize, GLsizei *  length, GLint *  size, GLenum *  type, GLchar *  name); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetActiveAttrib(int program, int index, int bufsize, int[] length, int length_offset, int[] size, int size_offset, int[] type, int type_offset, byte[] name, int name_offset);

  /** Entry point to C language function: <code> void {@native glGetActiveUniform}(GLuint program, GLuint index, GLsizei bufsize, GLsizei *  length, GLint *  size, GLenum *  type, GLchar *  name); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param size a direct or array-backed {@link java.nio.IntBuffer}
      @param type a direct or array-backed {@link java.nio.IntBuffer}
      @param name a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetActiveUniform(int program, int index, int bufsize, IntBuffer length, IntBuffer size, IntBuffer type, ByteBuffer name);

  /** Entry point to C language function: <code> void {@native glGetActiveUniform}(GLuint program, GLuint index, GLsizei bufsize, GLsizei *  length, GLint *  size, GLenum *  type, GLchar *  name); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetActiveUniform(int program, int index, int bufsize, int[] length, int length_offset, int[] size, int size_offset, int[] type, int type_offset, byte[] name, int name_offset);

  /** Entry point to C language function: <code> void {@native glGetAttachedShaders}(GLuint program, GLsizei maxcount, GLsizei *  count, GLuint *  shaders); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param count a direct or array-backed {@link java.nio.IntBuffer}
      @param shaders a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetAttachedShaders(int program, int maxcount, IntBuffer count, IntBuffer shaders);

  /** Entry point to C language function: <code> void {@native glGetAttachedShaders}(GLuint program, GLsizei maxcount, GLsizei *  count, GLuint *  shaders); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetAttachedShaders(int program, int maxcount, int[] count, int count_offset, int[] shaders, int shaders_offset);

  /** Entry point to C language function: <code> int {@native glGetAttribLocation}(GLuint program, const GLchar *  name); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public int glGetAttribLocation(int program, String name);

  /** Entry point to C language function: <code> void {@native glGetProgramBinaryOES}(GLuint program, GLsizei bufSize, GLsizei *  length, GLenum *  binaryFormat, GLvoid *  binary); </code> <br>Part of <code>GL_ARB_get_program_binary</code>; <code>GL_OES_get_program_binary</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param binaryFormat a direct or array-backed {@link java.nio.IntBuffer}
      @param binary a direct or array-backed {@link java.nio.Buffer}   */
  public void glGetProgramBinary(int program, int bufSize, IntBuffer length, IntBuffer binaryFormat, Buffer binary);

  /** Entry point to C language function: <code> void {@native glGetProgramBinaryOES}(GLuint program, GLsizei bufSize, GLsizei *  length, GLenum *  binaryFormat, GLvoid *  binary); </code> <br>Part of <code>GL_ARB_get_program_binary</code>; <code>GL_OES_get_program_binary</code>
      @param binary a direct or array-backed {@link java.nio.Buffer}   */
  public void glGetProgramBinary(int program, int bufSize, int[] length, int length_offset, int[] binaryFormat, int binaryFormat_offset, Buffer binary);

  /** Entry point to C language function: <code> void {@native glGetProgramInfoLog}(GLuint program, GLsizei bufsize, GLsizei *  length, GLchar *  infolog); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param infolog a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetProgramInfoLog(int program, int bufsize, IntBuffer length, ByteBuffer infolog);

  /** Entry point to C language function: <code> void {@native glGetProgramInfoLog}(GLuint program, GLsizei bufsize, GLsizei *  length, GLchar *  infolog); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetProgramInfoLog(int program, int bufsize, int[] length, int length_offset, byte[] infolog, int infolog_offset);

  /** Entry point to C language function: <code> void {@native glGetProgramiv}(GLuint program, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetProgramiv(int program, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetProgramiv}(GLuint program, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetProgramiv(int program, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetQueryObjectuivEXT}(GLuint id, GLenum pname, GLuint *  params); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetQueryObjectuiv(int id, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetQueryObjectuivEXT}(GLuint id, GLenum pname, GLuint *  params); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>   */
  public void glGetQueryObjectuiv(int id, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetQueryivEXT}(GLenum target, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetQueryiv(int target, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetQueryivEXT}(GLenum target, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>   */
  public void glGetQueryiv(int target, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetShaderInfoLog}(GLuint shader, GLsizei bufsize, GLsizei *  length, GLchar *  infolog); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param infolog a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetShaderInfoLog(int shader, int bufsize, IntBuffer length, ByteBuffer infolog);

  /** Entry point to C language function: <code> void {@native glGetShaderInfoLog}(GLuint shader, GLsizei bufsize, GLsizei *  length, GLchar *  infolog); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetShaderInfoLog(int shader, int bufsize, int[] length, int length_offset, byte[] infolog, int infolog_offset);

  /** Entry point to C language function: <code> void {@native glGetShaderSource}(GLuint shader, GLsizei bufsize, GLsizei *  length, GLchar *  source); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}
      @param source a direct or array-backed {@link java.nio.ByteBuffer}   */
  public void glGetShaderSource(int shader, int bufsize, IntBuffer length, ByteBuffer source);

  /** Entry point to C language function: <code> void {@native glGetShaderSource}(GLuint shader, GLsizei bufsize, GLsizei *  length, GLchar *  source); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetShaderSource(int shader, int bufsize, int[] length, int length_offset, byte[] source, int source_offset);

  /** Entry point to C language function: <code> void {@native glGetShaderiv}(GLuint shader, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetShaderiv(int shader, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetShaderiv}(GLuint shader, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetShaderiv(int shader, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> int {@native glGetUniformLocation}(GLuint program, const GLchar *  name); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public int glGetUniformLocation(int program, String name);

  /** Entry point to C language function: <code> void {@native glGetUniformfv}(GLuint program, GLint location, GLfloat *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param params a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glGetUniformfv(int program, int location, FloatBuffer params);

  /** Entry point to C language function: <code> void {@native glGetUniformfv}(GLuint program, GLint location, GLfloat *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetUniformfv(int program, int location, float[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetUniformiv}(GLuint program, GLint location, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetUniformiv(int program, int location, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetUniformiv}(GLuint program, GLint location, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetUniformiv(int program, int location, int[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribfv}(GLuint index, GLenum pname, GLfloat *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param params a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glGetVertexAttribfv(int index, int pname, FloatBuffer params);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribfv}(GLuint index, GLenum pname, GLfloat *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetVertexAttribfv(int index, int pname, float[] params, int params_offset);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribiv}(GLuint index, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param params a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glGetVertexAttribiv(int index, int pname, IntBuffer params);

  /** Entry point to C language function: <code> void {@native glGetVertexAttribiv}(GLuint index, GLenum pname, GLint *  params); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glGetVertexAttribiv(int index, int pname, int[] params, int params_offset);

  /** Entry point to C language function: <code> GLboolean {@native glIsProgram}(GLuint program); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public boolean glIsProgram(int program);

  /** Entry point to C language function: <code> GLboolean {@native glIsQueryEXT}(GLuint id); </code> <br>Part of <code>GL_VERSION_1_5</code>; <code>GL_EXT_occlusion_query_boolean</code>   */
  public boolean glIsQuery(int id);

  /** Entry point to C language function: <code> GLboolean {@native glIsShader}(GLuint shader); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public boolean glIsShader(int shader);

  /** Entry point to C language function: <code> void {@native glLinkProgram}(GLuint program); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glLinkProgram(int program);

  /** Entry point to C language function: <code> void {@native glProgramBinaryOES}(GLuint program, GLenum binaryFormat, const GLvoid *  binary, GLint length); </code> <br>Part of <code>GL_ARB_get_program_binary</code>; <code>GL_OES_get_program_binary</code>
      @param binary a direct or array-backed {@link java.nio.Buffer}   */
  public void glProgramBinary(int program, int binaryFormat, Buffer binary, int length);

  /** Entry point to C language function: <code> void {@native glShaderSource}(GLuint shader, GLsizei count, const GLchar *  *  string, const GLint *  length); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param length a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glShaderSource(int shader, int count, String[] string, IntBuffer length);

  /** Entry point to C language function: <code> void {@native glShaderSource}(GLuint shader, GLsizei count, const GLchar *  *  string, const GLint *  length); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glShaderSource(int shader, int count, String[] string, int[] length, int length_offset);

  /** Entry point to C language function: <code> void {@native glStencilFuncSeparate}(GLenum face, GLenum func, GLint ref, GLuint mask); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glStencilFuncSeparate(int face, int func, int ref, int mask);

  /** Entry point to C language function: <code> void {@native glStencilMaskSeparate}(GLenum face, GLuint mask); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glStencilMaskSeparate(int face, int mask);

  /** Entry point to C language function: <code> void {@native glStencilOpSeparate}(GLenum face, GLenum fail, GLenum zfail, GLenum zpass); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glStencilOpSeparate(int face, int fail, int zfail, int zpass);

  /** Entry point to C language function: <code> void {@native glTexImage3DOES}(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *  pixels); </code> <br>Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code>
      @param pixels a direct or array-backed {@link java.nio.Buffer}   */
  public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, Buffer pixels);

  /** Entry point to C language function: <code> void {@native glTexImage3DOES}(GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLsizei depth, GLint border, GLenum format, GLenum type, const GLvoid *  pixels); </code> <br>Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code>   */
  public void glTexImage3D(int target, int level, int internalformat, int width, int height, int depth, int border, int format, int type, long pixels_buffer_offset);

  /** Entry point to C language function: <code> void {@native glTexSubImage3DOES}(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *  pixels); </code> <br>Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code>
      @param pixels a direct or array-backed {@link java.nio.Buffer}   */
  public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, Buffer pixels);

  /** Entry point to C language function: <code> void {@native glTexSubImage3DOES}(GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint zoffset, GLsizei width, GLsizei height, GLsizei depth, GLenum format, GLenum type, const GLvoid *  pixels); </code> <br>Part of <code>GL_VERSION_1_2</code>; <code>GL_OES_texture_3D</code>   */
  public void glTexSubImage3D(int target, int level, int xoffset, int yoffset, int zoffset, int width, int height, int depth, int format, int type, long pixels_buffer_offset);

  /** Entry point to C language function: <code> void {@native glUniform1f}(GLint location, GLfloat x); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform1f(int location, float x);

  /** Entry point to C language function: <code> void {@native glUniform1fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniform1fv(int location, int count, FloatBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform1fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform1fv(int location, int count, float[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniform1i}(GLint location, GLint x); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform1i(int location, int x);

  /** Entry point to C language function: <code> void {@native glUniform1iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform1iv(int location, int count, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform1iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform1iv(int location, int count, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniform2f}(GLint location, GLfloat x, GLfloat y); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform2f(int location, float x, float y);

  /** Entry point to C language function: <code> void {@native glUniform2fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniform2fv(int location, int count, FloatBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform2fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform2fv(int location, int count, float[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniform2i}(GLint location, GLint x, GLint y); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform2i(int location, int x, int y);

  /** Entry point to C language function: <code> void {@native glUniform2iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform2iv(int location, int count, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform2iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform2iv(int location, int count, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniform3f}(GLint location, GLfloat x, GLfloat y, GLfloat z); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform3f(int location, float x, float y, float z);

  /** Entry point to C language function: <code> void {@native glUniform3fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniform3fv(int location, int count, FloatBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform3fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform3fv(int location, int count, float[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniform3i}(GLint location, GLint x, GLint y, GLint z); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform3i(int location, int x, int y, int z);

  /** Entry point to C language function: <code> void {@native glUniform3iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform3iv(int location, int count, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform3iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform3iv(int location, int count, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniform4f}(GLint location, GLfloat x, GLfloat y, GLfloat z, GLfloat w); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform4f(int location, float x, float y, float z, float w);

  /** Entry point to C language function: <code> void {@native glUniform4fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniform4fv(int location, int count, FloatBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform4fv}(GLint location, GLsizei count, const GLfloat *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform4fv(int location, int count, float[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniform4i}(GLint location, GLint x, GLint y, GLint z, GLint w); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform4i(int location, int x, int y, int z, int w);

  /** Entry point to C language function: <code> void {@native glUniform4iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param v a direct or array-backed {@link java.nio.IntBuffer}   */
  public void glUniform4iv(int location, int count, IntBuffer v);

  /** Entry point to C language function: <code> void {@native glUniform4iv}(GLint location, GLsizei count, const GLint *  v); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniform4iv(int location, int count, int[] v, int v_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix2fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix2fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniformMatrix2fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix3fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix3fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniformMatrix3fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param value a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glUniformMatrix4fv(int location, int count, boolean transpose, FloatBuffer value);

  /** Entry point to C language function: <code> void {@native glUniformMatrix4fv}(GLint location, GLsizei count, GLboolean transpose, const GLfloat *  value); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUniformMatrix4fv(int location, int count, boolean transpose, float[] value, int value_offset);

  /** Entry point to C language function: <code> void {@native glUseProgram}(GLuint program); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glUseProgram(int program);

  /** Entry point to C language function: <code> void {@native glValidateProgram}(GLuint program); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glValidateProgram(int program);

  /** Entry point to C language function: <code> void {@native glVertexAttrib1f}(GLuint indx, GLfloat x); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib1f(int indx, float x);

  /** Entry point to C language function: <code> void {@native glVertexAttrib1fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param values a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glVertexAttrib1fv(int indx, FloatBuffer values);

  /** Entry point to C language function: <code> void {@native glVertexAttrib1fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib1fv(int indx, float[] values, int values_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttrib2f}(GLuint indx, GLfloat x, GLfloat y); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib2f(int indx, float x, float y);

  /** Entry point to C language function: <code> void {@native glVertexAttrib2fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param values a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glVertexAttrib2fv(int indx, FloatBuffer values);

  /** Entry point to C language function: <code> void {@native glVertexAttrib2fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib2fv(int indx, float[] values, int values_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttrib3f}(GLuint indx, GLfloat x, GLfloat y, GLfloat z); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib3f(int indx, float x, float y, float z);

  /** Entry point to C language function: <code> void {@native glVertexAttrib3fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param values a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glVertexAttrib3fv(int indx, FloatBuffer values);

  /** Entry point to C language function: <code> void {@native glVertexAttrib3fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib3fv(int indx, float[] values, int values_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttrib4f}(GLuint indx, GLfloat x, GLfloat y, GLfloat z, GLfloat w); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib4f(int indx, float x, float y, float z, float w);

  /** Entry point to C language function: <code> void {@native glVertexAttrib4fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param values a direct or array-backed {@link java.nio.FloatBuffer}   */
  public void glVertexAttrib4fv(int indx, FloatBuffer values);

  /** Entry point to C language function: <code> void {@native glVertexAttrib4fv}(GLuint indx, const GLfloat *  values); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttrib4fv(int indx, float[] values, int values_offset);

  /** Entry point to C language function: <code> void {@native glVertexAttribPointer}(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *  ptr); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>
      @param ptr a direct or array-backed {@link java.nio.Buffer}   */
  public void glVertexAttribPointer(int indx, int size, int type, boolean normalized, int stride, Buffer ptr);

  /** Entry point to C language function: <code> void {@native glVertexAttribPointer}(GLuint indx, GLint size, GLenum type, GLboolean normalized, GLsizei stride, const GLvoid *  ptr); </code> <br>Part of <code>GL_VERSION_2_0</code>, <code>GL_ES_VERSION_2_0</code>   */
  public void glVertexAttribPointer(int indx, int size, int type, boolean normalized, int stride, long ptr_buffer_offset);


  // --- Begin CustomJavaCode .cfg declarations
 public void glClearDepth( double depth );
 public void glDepthRange(double zNear, double zFar);
    /** Part of <code>GL_ARB_separate_shader_objects</code>, <code>GL_EXT_separate_shader_objects</code> */
    public static final int GL_ALL_SHADER_BITS = 0xFFFFFFFF ;
  
    /** Start: GL_ARB_ES2_compatibility functions, which are part of ES2 core as well */
  
    /** Entry point to C language function: 
     * <code> void {@native glReleaseShaderCompiler}(void); </code> 
     * <br>Part of <code>GL_ES_VERSION_2_0</code> and <code>GL_ARB_ES2_compatibility</code>. 
     * <br> Nop if no native implementation is available.   */
    public void glReleaseShaderCompiler();
  
    /** Entry point to C language function: 
     * <code> void {@native glShaderBinary}(GLint n, const GLuint *  shaders, GLenum binaryformat, const void *  binary, GLint length); </code> 
     * <br>Part of <code>GL_ES_VERSION_2_0</code> and <code>GL_ARB_ES2_compatibility</code>. 
     * <br> Throws GLException if no native implementation is available.   */
    public void glShaderBinary(int n, IntBuffer shaders, int binaryformat, Buffer binary, int length);
  
    /** Entry point to C language function: 
     * <code> void {@native glShaderBinary}(GLint n, const GLuint *  shaders, GLenum binaryformat, const void *  binary, GLint length); </code> 
     * <br>Part of <code>GL_ES_VERSION_2_0</code> and <code>GL_ARB_ES2_compatibility</code>. 
     * <br> Throws GLException if no native implementation is available.   */
    public void glShaderBinary(int n, int[] shaders, int shaders_offset, int binaryformat, Buffer binary, int length);
  
    /** Entry point to C language function: 
     * <code> void {@native glGetShaderPrecisionFormat}(GLenum shadertype, GLenum precisiontype, GLint *  range, GLint *  precision); </code> 
     * <br>Part of <code>GL_ES_VERSION_2_0</code> and <code>GL_ARB_ES2_compatibility</code>. 
     * <br> Throws GLException if no native implementation is available.   */
    public void glGetShaderPrecisionFormat(int shadertype, int precisiontype, IntBuffer range, IntBuffer precision);
  
    /** Entry point to C language function: 
     * <code> void {@native glGetShaderPrecisionFormat}(GLenum shadertype, GLenum precisiontype, GLint *  range, GLint *  precision); </code> 
     * <br>Part of <code>GL_ES_VERSION_2_0</code> and <code>GL_ARB_ES2_compatibility</code>. 
     * <br> Throws GLException if no native implementation is available.   */
    public void glGetShaderPrecisionFormat(int shadertype, int precisiontype, int[] range, int range_offset, int[] precision, int precision_offset);
  
    /** Entry point to C language function: 
     * <code> void {@native glDepthRangef}(GLclampf zNear, GLclampf zFar); </code> 
     * <br>Part of <code>GL_ES_VERSION_2_0</code> and <code>GL_ARB_ES2_compatibility</code>. 
     * <br> Calls <code> void {@native glDepthRange}(GLclampd zNear, GLclampd zFar); </code> if no native implementation is available.   */
    public void glDepthRangef(float zNear, float zFar);
  
    /** Entry point to C language function: 
     * <code> void {@native glClearDepthf}(GLclampf depth); </code> 
     * <br>Part of <code>GL_ES_VERSION_2_0</code> and <code>GL_ARB_ES2_compatibility</code>. 
     * <br> Calls <code> void {@native glClearDepth}(GLclampd depth); </code> if no native implementation is available.   */
    public void glClearDepthf(float depth);
  
    /** End: GL_ARB_ES2_compatibility functions, which are part of ES2 core as well */
  public void glVertexAttribPointer(GLArrayData array);
  public void glUniform(GLUniformData data);

  // ---- End CustomJavaCode .cfg declarations

} // end of class GL2ES2
