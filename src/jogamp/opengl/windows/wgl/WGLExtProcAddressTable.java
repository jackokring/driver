/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Fri Aug 03 06:29:03 CEST 2012 ----! */

package jogamp.opengl.windows.wgl;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import com.jogamp.gluegen.runtime.ProcAddressTable;

/**
 * This table is a cache of pointers to the dynamically-linkable C library.
 * @see ProcAddressTable
 */
public class WGLExtProcAddressTable extends ProcAddressTable {

  public long _addressof_glMapBuffer;

  public WGLExtProcAddressTable(){ super(); }

  public WGLExtProcAddressTable(com.jogamp.gluegen.runtime.FunctionAddressResolver resolver){ super(resolver); }

  public long _addressof_wglAllocateMemoryNV;
  public long _addressof_wglBeginFrameTrackingI3D;
  public long _addressof_wglBindDisplayColorTableEXT;
  public long _addressof_wglBindSwapBarrierNV;
  public long _addressof_wglBindTexImageARB;
  public long _addressof_wglChoosePixelFormatARB;
  public long _addressof_wglChoosePixelFormatEXT;
  public long _addressof_wglCreateBufferRegionARB;
  public long _addressof_wglCreateContextAttribsARB;
  public long _addressof_wglCreateDisplayColorTableEXT;
  public long _addressof_wglCreatePbufferARB;
  public long _addressof_wglCreatePbufferEXT;
  public long _addressof_wglDeleteBufferRegionARB;
  public long _addressof_wglDestroyDisplayColorTableEXT;
  public long _addressof_wglDestroyPbufferARB;
  public long _addressof_wglDestroyPbufferEXT;
  public long _addressof_wglDisableFrameLockI3D;
  public long _addressof_wglEnableFrameLockI3D;
  public long _addressof_wglEndFrameTrackingI3D;
  public long _addressof_wglFreeMemoryNV;
  public long _addressof_wglGetCurrentReadDC;
  public long _addressof_wglGetExtensionsStringARB;
  public long _addressof_wglGetExtensionsStringEXT;
  public long _addressof_wglGetFrameUsageI3D;
  public long _addressof_wglGetPbufferDCARB;
  public long _addressof_wglGetPbufferDCEXT;
  public long _addressof_wglGetPixelFormatAttribfvARB;
  public long _addressof_wglGetPixelFormatAttribfvEXT;
  public long _addressof_wglGetPixelFormatAttribivARB;
  public long _addressof_wglGetPixelFormatAttribivEXT;
  public long _addressof_wglGetSwapIntervalEXT;
  public long _addressof_wglIsEnabledFrameLockI3D;
  public long _addressof_wglJoinSwapGroupNV;
  public long _addressof_wglLoadDisplayColorTableEXT;
  public long _addressof_wglMakeContextCurrent;
  public long _addressof_wglQueryFrameCountNV;
  public long _addressof_wglQueryFrameLockMasterI3D;
  public long _addressof_wglQueryFrameTrackingI3D;
  public long _addressof_wglQueryMaxSwapGroupsNV;
  public long _addressof_wglQueryPbufferARB;
  public long _addressof_wglQueryPbufferEXT;
  public long _addressof_wglQuerySwapGroupNV;
  public long _addressof_wglReleasePbufferDCARB;
  public long _addressof_wglReleasePbufferDCEXT;
  public long _addressof_wglReleaseTexImageARB;
  public long _addressof_wglResetFrameCountNV;
  public long _addressof_wglRestoreBufferRegionARB;
  public long _addressof_wglSaveBufferRegionARB;
  public long _addressof_wglSetPbufferAttribARB;
  public long _addressof_wglSwapIntervalEXT;
  /**
   * This is a convenience method to get (by name) the native function
   * pointer for a given function. It lets you avoid having to
   * manually compute the &quot;_addressof_ + 
   * &lt;functionName&gt;&quot; member variable name and look it up via
   * reflection; it also will throw an exception if you try to get the
   * address of an unknown function, or one that is statically linked
   * and therefore does not have a function pointer in this table.
   *
   * @throws RuntimeException if the function pointer was not found in
   *   this table, either because the function was unknown or because
   *   it was statically linked.
   */
  public long getAddressFor(String functionNameUsr) {
    String functionNameBase = com.jogamp.gluegen.runtime.opengl.GLNameResolver.normalizeVEN(com.jogamp.gluegen.runtime.opengl.GLNameResolver.normalizeARB(functionNameUsr, true), true);
    String addressFieldNameBase = PROCADDRESS_VAR_PREFIX + functionNameBase;
    java.lang.reflect.Field addressField = null;
    int  funcNamePermNum = com.jogamp.gluegen.runtime.opengl.GLNameResolver.getFuncNamePermutationNumber(functionNameBase);
    for(int i = 0; null==addressField && i < funcNamePermNum; i++) {
        String addressFieldName = com.jogamp.gluegen.runtime.opengl.GLNameResolver.getFuncNamePermutation(addressFieldNameBase, i);
        try {
          addressField = getClass().getField(addressFieldName);
        } catch (Exception e) { }
    }

    if(null==addressField) {
      // The user is calling a bogus function or one which is not
      // runtime linked
      throw new RuntimeException(
          "WARNING: Address field query failed for \"" + functionNameBase + "\"/\"" + functionNameUsr +
          "\"; it's either statically linked or address field is not a known " +
          "function");
    } 
    try {
      return addressField.getLong(this);
    } catch (Exception e) {
      throw new RuntimeException(
          "WARNING: Address query failed for \"" + functionNameBase + "\"/\"" + functionNameUsr +
          "\"; it's either statically linked or is not a known " +
          "function", e);
    }
  }
} // end of class WGLExtProcAddressTable
