/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Fri Aug 03 06:28:53 CEST 2012 ----! */

package jogamp.opengl.windows.wgl;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import jogamp.nativewindow.windows.PIXELFORMATDESCRIPTOR;
import com.jogamp.gluegen.runtime.opengl.GLProcAddressResolver;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

 /**
  * Provides access to the Windows-specific OpenGL vendor extensions.
  * See {@link GLBase} for more information.
  */
public class WGL {

  /** Part of CORE DEF */
  public static final int WGL_SWAP_MAIN_PLANE = 1;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY1 = 2;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY2 = 4;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY3 = 8;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY4 = 16;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY5 = 32;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY6 = 64;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY7 = 128;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY8 = 256;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY9 = 512;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY10 = 1024;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY11 = 2048;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY12 = 4096;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY13 = 8192;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY14 = 16384;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_OVERLAY15 = 32768;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY1 = 65536;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY2 = 0x20000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY3 = 0x40000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY4 = 0x80000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY5 = 0x100000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY6 = 0x200000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY7 = 0x400000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY8 = 0x800000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY9 = 0x1000000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY10 = 0x2000000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY11 = 0x4000000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY12 = 0x8000000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY13 = 0x10000000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY14 = 0x20000000;
  /** Part of CORE DEF */
  public static final int WGL_SWAP_UNDERLAY15 = 0x40000000;

  /** Entry point to C language function: <code> int wglChoosePixelFormat(HANDLE, const PIXELFORMATDESCRIPTOR * ); </code> <br>Part of CORE FUNC   */
  public static int wglChoosePixelFormat(long arg0, PIXELFORMATDESCRIPTOR arg1)  {

    final long __addr_ = wglProcAddressTable._addressof_wglChoosePixelFormat;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglChoosePixelFormat\" not available");
    }
        return dispatch_wglChoosePixelFormat1(arg0, ((arg1 == null) ? null : arg1.getBuffer()), __addr_);
  }

  /** Entry point to C language function: <code> int wglChoosePixelFormat(HANDLE, const PIXELFORMATDESCRIPTOR * ); </code> <br>Part of CORE FUNC   */
  private static native int dispatch_wglChoosePixelFormat1(long arg0, ByteBuffer arg1, long procAddress);

  /** Entry point to C language function: <code> BOOL wglCopyContext(HANDLE, HANDLE, UINT); </code> <br>Part of CORE FUNC   */
  public static boolean wglCopyContext(long arg0, long arg1, int arg2)  {

    final long __addr_ = wglProcAddressTable._addressof_wglCopyContext;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglCopyContext\" not available");
    }
        return dispatch_wglCopyContext1(arg0, arg1, arg2, __addr_);
  }

  /** Entry point to C language function: <code> BOOL wglCopyContext(HANDLE, HANDLE, UINT); </code> <br>Part of CORE FUNC   */
  public static native boolean dispatch_wglCopyContext1(long arg0, long arg1, int arg2, long procAddress);

  /** Entry point to C language function: <code> HANDLE wglCreateContext(HANDLE); </code> <br>Part of CORE FUNC   */
  public static long wglCreateContext(long arg0)  {

    final long __addr_ = wglProcAddressTable._addressof_wglCreateContext;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglCreateContext\" not available");
    }
        return dispatch_wglCreateContext1(arg0, __addr_);
  }

  /** Entry point to C language function: <code> HANDLE wglCreateContext(HANDLE); </code> <br>Part of CORE FUNC   */
  public static native long dispatch_wglCreateContext1(long arg0, long procAddress);

  /** Entry point to C language function: <code> BOOL wglDeleteContext(HANDLE); </code> <br>Part of CORE FUNC   */
  public static boolean wglDeleteContext(long arg0)  {

    final long __addr_ = wglProcAddressTable._addressof_wglDeleteContext;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglDeleteContext\" not available");
    }
        return dispatch_wglDeleteContext1(arg0, __addr_);
  }

  /** Entry point to C language function: <code> BOOL wglDeleteContext(HANDLE); </code> <br>Part of CORE FUNC   */
  public static native boolean dispatch_wglDeleteContext1(long arg0, long procAddress);

  /** Entry point to C language function: <code> int wglDescribePixelFormat(HANDLE, int, UINT, PPIXELFORMATDESCRIPTOR); </code> <br>Part of CORE FUNC   */
  public static int wglDescribePixelFormat(long arg0, int arg1, int arg2, PIXELFORMATDESCRIPTOR arg3)  {

    final long __addr_ = wglProcAddressTable._addressof_wglDescribePixelFormat;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglDescribePixelFormat\" not available");
    }
        return dispatch_wglDescribePixelFormat1(arg0, arg1, arg2, ((arg3 == null) ? null : arg3.getBuffer()), __addr_);
  }

  /** Entry point to C language function: <code> int wglDescribePixelFormat(HANDLE, int, UINT, PPIXELFORMATDESCRIPTOR); </code> <br>Part of CORE FUNC   */
  private static native int dispatch_wglDescribePixelFormat1(long arg0, int arg1, int arg2, ByteBuffer arg3, long procAddress);

  /** Entry point to C language function: <code> HANDLE wglGetCurrentContext(void); </code> <br>Part of CORE FUNC   */
  public static long wglGetCurrentContext()  {

    final long __addr_ = wglProcAddressTable._addressof_wglGetCurrentContext;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglGetCurrentContext\" not available");
    }
        return dispatch_wglGetCurrentContext1(__addr_);
  }

  /** Entry point to C language function: <code> HANDLE wglGetCurrentContext(void); </code> <br>Part of CORE FUNC   */
  public static native long dispatch_wglGetCurrentContext1(long procAddress);

  /** Entry point to C language function: <code> HANDLE wglGetCurrentDC(void); </code> <br>Part of CORE FUNC   */
  public static long wglGetCurrentDC()  {

    final long __addr_ = wglProcAddressTable._addressof_wglGetCurrentDC;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglGetCurrentDC\" not available");
    }
        return dispatch_wglGetCurrentDC1(__addr_);
  }

  /** Entry point to C language function: <code> HANDLE wglGetCurrentDC(void); </code> <br>Part of CORE FUNC   */
  public static native long dispatch_wglGetCurrentDC1(long procAddress);

  /** Entry point to C language function: <code> int wglGetPixelFormat(HANDLE); </code> <br>Part of CORE FUNC   */
  public static int wglGetPixelFormat(long arg0)  {

    final long __addr_ = wglProcAddressTable._addressof_wglGetPixelFormat;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglGetPixelFormat\" not available");
    }
        return dispatch_wglGetPixelFormat1(arg0, __addr_);
  }

  /** Entry point to C language function: <code> int wglGetPixelFormat(HANDLE); </code> <br>Part of CORE FUNC   */
  public static native int dispatch_wglGetPixelFormat1(long arg0, long procAddress);

  /** Entry point to C language function: <code> PROC wglGetProcAddress(LPCSTR); </code> <br>Part of CORE FUNC   */
  public static long wglGetProcAddress(String arg0)  {

    final long __addr_ = wglProcAddressTable._addressof_wglGetProcAddress;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglGetProcAddress\" not available");
    }
        return dispatch_wglGetProcAddress1(arg0, __addr_);
  }

  /** Entry point to C language function: <code> PROC wglGetProcAddress(LPCSTR); </code> <br>Part of CORE FUNC   */
  public static native long dispatch_wglGetProcAddress1(String arg0, long procAddress);

  /** Entry point to C language function: <code> BOOL wglMakeCurrent(HANDLE, HANDLE); </code> <br>Part of CORE FUNC   */
  public static boolean wglMakeCurrent(long arg0, long arg1)  {

    final long __addr_ = wglProcAddressTable._addressof_wglMakeCurrent;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglMakeCurrent\" not available");
    }
        return dispatch_wglMakeCurrent1(arg0, arg1, __addr_);
  }

  /** Entry point to C language function: <code> BOOL wglMakeCurrent(HANDLE, HANDLE); </code> <br>Part of CORE FUNC   */
  public static native boolean dispatch_wglMakeCurrent1(long arg0, long arg1, long procAddress);

  /** Entry point to C language function: <code> BOOL wglSetPixelFormat(HANDLE, int, const PIXELFORMATDESCRIPTOR * ); </code> <br>Part of CORE FUNC   */
  public static boolean wglSetPixelFormat(long arg0, int arg1, PIXELFORMATDESCRIPTOR arg2)  {

    final long __addr_ = wglProcAddressTable._addressof_wglSetPixelFormat;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglSetPixelFormat\" not available");
    }
        return dispatch_wglSetPixelFormat1(arg0, arg1, ((arg2 == null) ? null : arg2.getBuffer()), __addr_);
  }

  /** Entry point to C language function: <code> BOOL wglSetPixelFormat(HANDLE, int, const PIXELFORMATDESCRIPTOR * ); </code> <br>Part of CORE FUNC   */
  private static native boolean dispatch_wglSetPixelFormat1(long arg0, int arg1, ByteBuffer arg2, long procAddress);

  /** Entry point to C language function: <code> BOOL wglShareLists(HANDLE, HANDLE); </code> <br>Part of CORE FUNC   */
  public static boolean wglShareLists(long arg0, long arg1)  {

    final long __addr_ = wglProcAddressTable._addressof_wglShareLists;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglShareLists\" not available");
    }
        return dispatch_wglShareLists1(arg0, arg1, __addr_);
  }

  /** Entry point to C language function: <code> BOOL wglShareLists(HANDLE, HANDLE); </code> <br>Part of CORE FUNC   */
  public static native boolean dispatch_wglShareLists1(long arg0, long arg1, long procAddress);

  /** Entry point to C language function: <code> BOOL wglSwapBuffers(HANDLE); </code> <br>Part of CORE FUNC   */
  public static boolean wglSwapBuffers(long arg0)  {

    final long __addr_ = wglProcAddressTable._addressof_wglSwapBuffers;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglSwapBuffers\" not available");
    }
        return dispatch_wglSwapBuffers1(arg0, __addr_);
  }

  /** Entry point to C language function: <code> BOOL wglSwapBuffers(HANDLE); </code> <br>Part of CORE FUNC   */
  public static native boolean dispatch_wglSwapBuffers1(long arg0, long procAddress);

  /** Entry point to C language function: <code> BOOL wglSwapLayerBuffers(HANDLE, UINT); </code> <br>Part of CORE FUNC   */
  public static boolean wglSwapLayerBuffers(long arg0, int arg1)  {

    final long __addr_ = wglProcAddressTable._addressof_wglSwapLayerBuffers;
    if (__addr_ == 0) {
      throw new GLException("Method \"wglSwapLayerBuffers\" not available");
    }
        return dispatch_wglSwapLayerBuffers1(arg0, arg1, __addr_);
  }

  /** Entry point to C language function: <code> BOOL wglSwapLayerBuffers(HANDLE, UINT); </code> <br>Part of CORE FUNC   */
  public static native boolean dispatch_wglSwapLayerBuffers1(long arg0, int arg1, long procAddress);


  // --- Begin CustomJavaCode .cfg declarations
 private static WGLProcAddressTable wglProcAddressTable = new WGLProcAddressTable(new GLProcAddressResolver());
 public  static WGLProcAddressTable getWGLProcAddressTable() { return wglProcAddressTable; }
  protected static long wglGetProcAddress(long wglGetProcAddressHandle, java.lang.String procname)
  {
    if (wglGetProcAddressHandle == 0) {
      throw new GLException("Passed null pointer for method \"wglGetProcAddress\"");
    }
    return dispatch_wglGetProcAddress1(procname, wglGetProcAddressHandle);
  }
  // ---- End CustomJavaCode .cfg declarations

} // end of class WGL
