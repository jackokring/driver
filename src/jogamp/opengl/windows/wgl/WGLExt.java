/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Fri Aug 03 06:29:03 CEST 2012 ----! */

package jogamp.opengl.windows.wgl;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;
import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import java.nio.*;

public interface WGLExt {

  /** Part of CORE DEF */
  public static final int HAS_STDDEF = 1;
  /** Part of CORE DEF */
  public static final int WGL_WGLEXT_VERSION = 8;
  /** Part of <code>WGL_ARB_buffer_region</code> */
  public static final int WGL_FRONT_COLOR_BUFFER_BIT_ARB = 0x00000001;
  /** Part of <code>WGL_ARB_buffer_region</code> */
  public static final int WGL_BACK_COLOR_BUFFER_BIT_ARB = 0x00000002;
  /** Part of <code>WGL_ARB_buffer_region</code> */
  public static final int WGL_DEPTH_BUFFER_BIT_ARB = 0x00000004;
  /** Part of <code>WGL_ARB_buffer_region</code> */
  public static final int WGL_STENCIL_BUFFER_BIT_ARB = 0x00000008;
  /** Part of <code>WGL_ARB_multisample</code> */
  public static final int WGL_SAMPLE_BUFFERS_ARB = 0x2041;
  /** Part of <code>WGL_ARB_multisample</code> */
  public static final int WGL_SAMPLES_ARB = 0x2042;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_NUMBER_PIXEL_FORMATS_ARB = 0x2000;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_DRAW_TO_WINDOW_ARB = 0x2001;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_DRAW_TO_BITMAP_ARB = 0x2002;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ACCELERATION_ARB = 0x2003;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_NEED_PALETTE_ARB = 0x2004;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_NEED_SYSTEM_PALETTE_ARB = 0x2005;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SWAP_LAYER_BUFFERS_ARB = 0x2006;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SWAP_METHOD_ARB = 0x2007;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_NUMBER_OVERLAYS_ARB = 0x2008;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_NUMBER_UNDERLAYS_ARB = 0x2009;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TRANSPARENT_ARB = 0x200A;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TRANSPARENT_RED_VALUE_ARB = 0x2037;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TRANSPARENT_GREEN_VALUE_ARB = 0x2038;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TRANSPARENT_BLUE_VALUE_ARB = 0x2039;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TRANSPARENT_ALPHA_VALUE_ARB = 0x203A;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TRANSPARENT_INDEX_VALUE_ARB = 0x203B;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SHARE_DEPTH_ARB = 0x200C;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SHARE_STENCIL_ARB = 0x200D;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SHARE_ACCUM_ARB = 0x200E;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SUPPORT_GDI_ARB = 0x200F;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SUPPORT_OPENGL_ARB = 0x2010;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_DOUBLE_BUFFER_ARB = 0x2011;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_STEREO_ARB = 0x2012;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_PIXEL_TYPE_ARB = 0x2013;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_COLOR_BITS_ARB = 0x2014;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_RED_BITS_ARB = 0x2015;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_RED_SHIFT_ARB = 0x2016;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_GREEN_BITS_ARB = 0x2017;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_GREEN_SHIFT_ARB = 0x2018;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_BLUE_BITS_ARB = 0x2019;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_BLUE_SHIFT_ARB = 0x201A;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ALPHA_BITS_ARB = 0x201B;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ALPHA_SHIFT_ARB = 0x201C;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ACCUM_BITS_ARB = 0x201D;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ACCUM_RED_BITS_ARB = 0x201E;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ACCUM_GREEN_BITS_ARB = 0x201F;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ACCUM_BLUE_BITS_ARB = 0x2020;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_ACCUM_ALPHA_BITS_ARB = 0x2021;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_DEPTH_BITS_ARB = 0x2022;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_STENCIL_BITS_ARB = 0x2023;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_AUX_BUFFERS_ARB = 0x2024;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_NO_ACCELERATION_ARB = 0x2025;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_GENERIC_ACCELERATION_ARB = 0x2026;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_FULL_ACCELERATION_ARB = 0x2027;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SWAP_EXCHANGE_ARB = 0x2028;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SWAP_COPY_ARB = 0x2029;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_SWAP_UNDEFINED_ARB = 0x202A;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TYPE_RGBA_ARB = 0x202B;
  /** Part of <code>WGL_ARB_pixel_format</code> */
  public static final int WGL_TYPE_COLORINDEX_ARB = 0x202C;
  /** Part of CORE DEF */
  public static final int ERROR_INVALID_PIXEL_TYPE_ARB = 0x2043;
  /** Part of CORE DEF */
  public static final int ERROR_INCOMPATIBLE_DEVICE_CONTEXTS_ARB = 0x2054;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_DRAW_TO_PBUFFER_ARB = 0x202D;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_MAX_PBUFFER_PIXELS_ARB = 0x202E;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_MAX_PBUFFER_WIDTH_ARB = 0x202F;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_MAX_PBUFFER_HEIGHT_ARB = 0x2030;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_PBUFFER_LARGEST_ARB = 0x2033;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_PBUFFER_WIDTH_ARB = 0x2034;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_PBUFFER_HEIGHT_ARB = 0x2035;
  /** Part of <code>WGL_ARB_pbuffer</code> */
  public static final int WGL_PBUFFER_LOST_ARB = 0x2036;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_BIND_TO_TEXTURE_RGB_ARB = 0x2070;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_BIND_TO_TEXTURE_RGBA_ARB = 0x2071;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_FORMAT_ARB = 0x2072;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_TARGET_ARB = 0x2073;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_MIPMAP_TEXTURE_ARB = 0x2074;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_RGB_ARB = 0x2075;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_RGBA_ARB = 0x2076;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_NO_TEXTURE_ARB = 0x2077;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_CUBE_MAP_ARB = 0x2078;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_1D_ARB = 0x2079;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_2D_ARB = 0x207A;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_MIPMAP_LEVEL_ARB = 0x207B;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_CUBE_MAP_FACE_ARB = 0x207C;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_CUBE_MAP_POSITIVE_X_ARB = 0x207D;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_CUBE_MAP_NEGATIVE_X_ARB = 0x207E;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_CUBE_MAP_POSITIVE_Y_ARB = 0x207F;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_CUBE_MAP_NEGATIVE_Y_ARB = 0x2080;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_CUBE_MAP_POSITIVE_Z_ARB = 0x2081;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_TEXTURE_CUBE_MAP_NEGATIVE_Z_ARB = 0x2082;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_FRONT_LEFT_ARB = 0x2083;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_FRONT_RIGHT_ARB = 0x2084;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_BACK_LEFT_ARB = 0x2085;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_BACK_RIGHT_ARB = 0x2086;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX0_ARB = 0x2087;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX1_ARB = 0x2088;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX2_ARB = 0x2089;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX3_ARB = 0x208A;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX4_ARB = 0x208B;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX5_ARB = 0x208C;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX6_ARB = 0x208D;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX7_ARB = 0x208E;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX8_ARB = 0x208F;
  /** Part of <code>WGL_ARB_render_texture</code> */
  public static final int WGL_AUX9_ARB = 0x2090;
  /** Part of <code>WGL_ARB_pixel_format_float</code> */
  public static final int WGL_TYPE_RGBA_FLOAT_ARB = 0x21A0;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_DEBUG_BIT_ARB = 0x00000001;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_FORWARD_COMPATIBLE_BIT_ARB = 0x00000002;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_CORE_PROFILE_BIT_ARB = 0x00000001;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_COMPATIBILITY_PROFILE_BIT_ARB = 0x00000002;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_MAJOR_VERSION_ARB = 0x2091;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_MINOR_VERSION_ARB = 0x2092;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_LAYER_PLANE_ARB = 0x2093;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_FLAGS_ARB = 0x2094;
  /** Part of <code>WGL_ARB_create_context</code> */
  public static final int WGL_CONTEXT_PROFILE_MASK_ARB = 0x9126;
  /** Part of CORE DEF */
  public static final int ERROR_INVALID_VERSION_ARB = 0x2095;
  /** Part of <code>WGL_ARB_create_context_robustness</code> */
  public static final int WGL_CONTEXT_ROBUST_ACCESS_BIT_ARB = 0x00000004;
  /** Part of <code>WGL_ARB_create_context_robustness</code> */
  public static final int WGL_CONTEXT_RESET_NOTIFICATION_STRATEGY_ARB = 0x8256;
  /** Part of <code>WGL_ARB_create_context_robustness</code> */
  public static final int WGL_NO_RESET_NOTIFICATION_ARB = 0x8261;
  /** Part of <code>WGL_ARB_create_context_robustness</code> */
  public static final int WGL_LOSE_CONTEXT_ON_RESET_ARB = 0x8252;
  /** Part of <code>WGL_EXT_create_context_es2_profile</code> */
  public static final int WGL_CONTEXT_ES2_PROFILE_BIT_EXT = 0x00000004;
  /** Part of CORE DEF */
  public static final int ERROR_INVALID_PIXEL_TYPE_EXT = 0x2043;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_NUMBER_PIXEL_FORMATS_EXT = 0x2000;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_DRAW_TO_WINDOW_EXT = 0x2001;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_DRAW_TO_BITMAP_EXT = 0x2002;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ACCELERATION_EXT = 0x2003;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_NEED_PALETTE_EXT = 0x2004;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_NEED_SYSTEM_PALETTE_EXT = 0x2005;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SWAP_LAYER_BUFFERS_EXT = 0x2006;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SWAP_METHOD_EXT = 0x2007;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_NUMBER_OVERLAYS_EXT = 0x2008;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_NUMBER_UNDERLAYS_EXT = 0x2009;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_TRANSPARENT_EXT = 0x200A;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_TRANSPARENT_VALUE_EXT = 0x200B;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SHARE_DEPTH_EXT = 0x200C;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SHARE_STENCIL_EXT = 0x200D;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SHARE_ACCUM_EXT = 0x200E;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SUPPORT_GDI_EXT = 0x200F;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SUPPORT_OPENGL_EXT = 0x2010;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_DOUBLE_BUFFER_EXT = 0x2011;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_STEREO_EXT = 0x2012;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_PIXEL_TYPE_EXT = 0x2013;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_COLOR_BITS_EXT = 0x2014;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_RED_BITS_EXT = 0x2015;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_RED_SHIFT_EXT = 0x2016;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_GREEN_BITS_EXT = 0x2017;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_GREEN_SHIFT_EXT = 0x2018;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_BLUE_BITS_EXT = 0x2019;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_BLUE_SHIFT_EXT = 0x201A;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ALPHA_BITS_EXT = 0x201B;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ALPHA_SHIFT_EXT = 0x201C;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ACCUM_BITS_EXT = 0x201D;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ACCUM_RED_BITS_EXT = 0x201E;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ACCUM_GREEN_BITS_EXT = 0x201F;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ACCUM_BLUE_BITS_EXT = 0x2020;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_ACCUM_ALPHA_BITS_EXT = 0x2021;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_DEPTH_BITS_EXT = 0x2022;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_STENCIL_BITS_EXT = 0x2023;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_AUX_BUFFERS_EXT = 0x2024;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_NO_ACCELERATION_EXT = 0x2025;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_GENERIC_ACCELERATION_EXT = 0x2026;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_FULL_ACCELERATION_EXT = 0x2027;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SWAP_EXCHANGE_EXT = 0x2028;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SWAP_COPY_EXT = 0x2029;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_SWAP_UNDEFINED_EXT = 0x202A;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_TYPE_RGBA_EXT = 0x202B;
  /** Part of <code>WGL_EXT_pixel_format</code> */
  public static final int WGL_TYPE_COLORINDEX_EXT = 0x202C;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_DRAW_TO_PBUFFER_EXT = 0x202D;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_MAX_PBUFFER_PIXELS_EXT = 0x202E;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_MAX_PBUFFER_WIDTH_EXT = 0x202F;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_MAX_PBUFFER_HEIGHT_EXT = 0x2030;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_OPTIMAL_PBUFFER_WIDTH_EXT = 0x2031;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_OPTIMAL_PBUFFER_HEIGHT_EXT = 0x2032;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_PBUFFER_LARGEST_EXT = 0x2033;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_PBUFFER_WIDTH_EXT = 0x2034;
  /** Part of <code>WGL_EXT_pbuffer</code> */
  public static final int WGL_PBUFFER_HEIGHT_EXT = 0x2035;
  /** Part of <code>WGL_EXT_depth_float</code> */
  public static final int WGL_DEPTH_FLOAT_EXT = 0x2040;
  /** Part of <code>WGL_3DFX_multisample</code> */
  public static final int WGL_SAMPLE_BUFFERS_3DFX = 0x2060;
  /** Part of <code>WGL_3DFX_multisample</code> */
  public static final int WGL_SAMPLES_3DFX = 0x2061;
  /** Part of <code>WGL_EXT_multisample</code> */
  public static final int WGL_SAMPLE_BUFFERS_EXT = 0x2041;
  /** Part of <code>WGL_EXT_multisample</code> */
  public static final int WGL_SAMPLES_EXT = 0x2042;
  /** Part of <code>WGL_I3D_digital_video_control</code> */
  public static final int WGL_DIGITAL_VIDEO_CURSOR_ALPHA_FRAMEBUFFER_I3D = 0x2050;
  /** Part of <code>WGL_I3D_digital_video_control</code> */
  public static final int WGL_DIGITAL_VIDEO_CURSOR_ALPHA_VALUE_I3D = 0x2051;
  /** Part of <code>WGL_I3D_digital_video_control</code> */
  public static final int WGL_DIGITAL_VIDEO_CURSOR_INCLUDED_I3D = 0x2052;
  /** Part of <code>WGL_I3D_digital_video_control</code> */
  public static final int WGL_DIGITAL_VIDEO_GAMMA_CORRECTED_I3D = 0x2053;
  /** Part of <code>WGL_I3D_gamma</code> */
  public static final int WGL_GAMMA_TABLE_SIZE_I3D = 0x204E;
  /** Part of <code>WGL_I3D_gamma</code> */
  public static final int WGL_GAMMA_EXCLUDE_DESKTOP_I3D = 0x204F;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_MULTIVIEW_I3D = 0x2044;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_EXTENAL_SYNC_I3D = 0x2045;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_EXTENAL_FIELD_I3D = 0x2046;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_EXTENAL_TTL_I3D = 0x2047;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_DIGITAL_SYNC_I3D = 0x2048;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_DIGITAL_FIELD_I3D = 0x2049;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_EDGE_FALLING_I3D = 0x204A;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_EDGE_RISING_I3D = 0x204B;
  /** Part of <code>WGL_I3D_genlock</code> */
  public static final int WGL_GENLOCK_SOURCE_EDGE_BOTH_I3D = 0x204C;
  /** Part of <code>WGL_I3D_image_buffer</code> */
  public static final int WGL_IMAGE_BUFFER_MIN_ACCESS_I3D = 0x00000001;
  /** Part of <code>WGL_I3D_image_buffer</code> */
  public static final int WGL_IMAGE_BUFFER_LOCK_I3D = 0x00000002;
  /** Part of <code>WGL_NV_render_depth_texture</code> */
  public static final int WGL_BIND_TO_TEXTURE_DEPTH_NV = 0x20A3;
  /** Part of <code>WGL_NV_render_depth_texture</code> */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_DEPTH_NV = 0x20A4;
  /** Part of <code>WGL_NV_render_depth_texture</code> */
  public static final int WGL_DEPTH_TEXTURE_FORMAT_NV = 0x20A5;
  /** Part of <code>WGL_NV_render_depth_texture</code> */
  public static final int WGL_TEXTURE_DEPTH_COMPONENT_NV = 0x20A6;
  /** Part of <code>WGL_NV_render_depth_texture</code> */
  public static final int WGL_DEPTH_COMPONENT_NV = 0x20A7;
  /** Part of <code>WGL_NV_render_texture_rectangle</code> */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_RGB_NV = 0x20A0;
  /** Part of <code>WGL_NV_render_texture_rectangle</code> */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_RGBA_NV = 0x20A1;
  /** Part of <code>WGL_NV_render_texture_rectangle</code> */
  public static final int WGL_TEXTURE_RECTANGLE_NV = 0x20A2;
  /** Part of <code>WGL_ATI_pixel_format_float</code> */
  public static final int WGL_TYPE_RGBA_FLOAT_ATI = 0x21A0;
  /** Part of <code>WGL_ATI_pixel_format_float</code> */
  public static final int WGL_RGBA_FLOAT_MODE_ATI = 0x8820;
  /** Part of <code>WGL_ATI_pixel_format_float</code> */
  public static final int WGL_COLOR_CLEAR_UNCLAMPED_VALUE_ATI = 0x8835;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_FLOAT_COMPONENTS_NV = 0x20B0;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_R_NV = 0x20B1;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RG_NV = 0x20B2;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGB_NV = 0x20B3;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_BIND_TO_TEXTURE_RECTANGLE_FLOAT_RGBA_NV = 0x20B4;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_TEXTURE_FLOAT_R_NV = 0x20B5;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_TEXTURE_FLOAT_RG_NV = 0x20B6;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_TEXTURE_FLOAT_RGB_NV = 0x20B7;
  /** Part of <code>WGL_NV_float_buffer</code> */
  public static final int WGL_TEXTURE_FLOAT_RGBA_NV = 0x20B8;
  /** Part of <code>WGL_3DL_stereo_control</code> */
  public static final int WGL_STEREO_EMITTER_ENABLE_3DL = 0x2055;
  /** Part of <code>WGL_3DL_stereo_control</code> */
  public static final int WGL_STEREO_EMITTER_DISABLE_3DL = 0x2056;
  /** Part of <code>WGL_3DL_stereo_control</code> */
  public static final int WGL_STEREO_POLARITY_NORMAL_3DL = 0x2057;
  /** Part of <code>WGL_3DL_stereo_control</code> */
  public static final int WGL_STEREO_POLARITY_INVERT_3DL = 0x2058;
  /** Part of CORE DEF */
  public static final int WGL_ARB_buffer_region = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_multisample = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_extensions_string = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_pixel_format = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_make_current_read = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_pbuffer = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_render_texture = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_pixel_format_float = 1;
  /** Part of CORE DEF */
  public static final int WGL_ARB_create_context = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_display_color_table = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_extensions_string = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_make_current_read = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_pbuffer = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_pixel_format = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_swap_control = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_depth_float = 1;
  /** Part of CORE DEF */
  public static final int WGL_NV_vertex_array_range = 1;
  /** Part of CORE DEF */
  public static final int WGL_3DFX_multisample = 1;
  /** Part of CORE DEF */
  public static final int WGL_EXT_multisample = 1;
  /** Part of CORE DEF */
  public static final int WGL_OML_sync_control = 1;
  /** Part of CORE DEF */
  public static final int WGL_I3D_digital_video_control = 1;
  /** Part of CORE DEF */
  public static final int WGL_I3D_gamma = 1;
  /** Part of CORE DEF */
  public static final int WGL_I3D_genlock = 1;
  /** Part of CORE DEF */
  public static final int WGL_I3D_image_buffer = 1;
  /** Part of CORE DEF */
  public static final int WGL_I3D_swap_frame_lock = 1;
  /** Part of CORE DEF */
  public static final int WGL_I3D_swap_frame_usage = 1;
  /** Part of CORE DEF */
  public static final int WGL_ATI_pixel_format_float = 1;
  /** Part of CORE DEF */
  public static final int WGL_NV_float_buffer = 1;
  /** Part of CORE DEF */
  public static final int WGL_NV_swap_group = 1;
  /** Part of CORE DEF */
  public static final int WGL_NV_gpu_affinity = 1;
  /** Part of CORE DEF */
  public static final int WGL_NV_render_texture_rectangle = 1;
  /** Part of CORE DEF */
  public static final int WGL_NV_render_depth_texture = 1;

  /** Entry point to C language function: <code> LPVOID wglAllocateMemoryNV(GLsizei size, GLfloat readfreq, GLfloat writefreq, GLfloat priority); </code> <br>Part of <code>WGL_NV_vertex_array_range</code>   */
  public ByteBuffer wglAllocateMemoryNV(int size, float readfreq, float writefreq, float priority);

  /** Entry point to C language function: <code> BOOL wglBeginFrameTrackingI3D(void); </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code>   */
  public boolean wglBeginFrameTrackingI3D();

  /** Entry point to C language function: <code> GLboolean wglBindDisplayColorTableEXT(GLushort id); </code> <br>Part of <code>WGL_EXT_display_color_table</code>   */
  public boolean wglBindDisplayColorTableEXT(short id);

  /** Entry point to C language function: <code> BOOL wglBindSwapBarrierNV(GLuint group, GLuint barrier); </code> <br>Part of <code>WGL_NV_swap_group</code>   */
  public boolean wglBindSwapBarrierNV(int group, int barrier);

  /** Entry point to C language function: <code> BOOL wglBindTexImageARB(HANDLE hPbuffer, int iBuffer); </code> <br>Part of <code>WGL_ARB_render_texture</code>   */
  public boolean wglBindTexImageARB(long hPbuffer, int iBuffer);

  /** Entry point to C language function: <code> BOOL wglChoosePixelFormatARB(HANDLE hdc, const int *  piAttribIList, const FLOAT *  pfAttribFList, UINT nMaxFormats, int *  piFormats, UINT *  nNumFormats); </code> <br>Part of <code>WGL_ARB_pixel_format</code>
      @param piAttribIList a direct or array-backed {@link java.nio.IntBuffer}
      @param pfAttribFList a direct or array-backed {@link java.nio.FloatBuffer}
      @param piFormats a direct or array-backed {@link java.nio.IntBuffer}
      @param nNumFormats a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglChoosePixelFormatARB(long hdc, IntBuffer piAttribIList, FloatBuffer pfAttribFList, int nMaxFormats, IntBuffer piFormats, IntBuffer nNumFormats);

  /** Entry point to C language function: <code> BOOL wglChoosePixelFormatARB(HANDLE hdc, const int *  piAttribIList, const FLOAT *  pfAttribFList, UINT nMaxFormats, int *  piFormats, UINT *  nNumFormats); </code> <br>Part of <code>WGL_ARB_pixel_format</code>   */
  public boolean wglChoosePixelFormatARB(long hdc, int[] piAttribIList, int piAttribIList_offset, float[] pfAttribFList, int pfAttribFList_offset, int nMaxFormats, int[] piFormats, int piFormats_offset, int[] nNumFormats, int nNumFormats_offset);

  /** Entry point to C language function: <code> BOOL wglChoosePixelFormatEXT(HANDLE hdc, const int *  piAttribIList, const FLOAT *  pfAttribFList, UINT nMaxFormats, int *  piFormats, UINT *  nNumFormats); </code> <br>Part of <code>WGL_EXT_pixel_format</code>
      @param piAttribIList a direct or array-backed {@link java.nio.IntBuffer}
      @param pfAttribFList a direct or array-backed {@link java.nio.FloatBuffer}
      @param piFormats a direct or array-backed {@link java.nio.IntBuffer}
      @param nNumFormats a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglChoosePixelFormatEXT(long hdc, IntBuffer piAttribIList, FloatBuffer pfAttribFList, int nMaxFormats, IntBuffer piFormats, IntBuffer nNumFormats);

  /** Entry point to C language function: <code> BOOL wglChoosePixelFormatEXT(HANDLE hdc, const int *  piAttribIList, const FLOAT *  pfAttribFList, UINT nMaxFormats, int *  piFormats, UINT *  nNumFormats); </code> <br>Part of <code>WGL_EXT_pixel_format</code>   */
  public boolean wglChoosePixelFormatEXT(long hdc, int[] piAttribIList, int piAttribIList_offset, float[] pfAttribFList, int pfAttribFList_offset, int nMaxFormats, int[] piFormats, int piFormats_offset, int[] nNumFormats, int nNumFormats_offset);

  /** Entry point to C language function: <code> HANDLE wglCreateBufferRegionARB(HANDLE hDC, int iLayerPlane, UINT uType); </code> <br>Part of <code>WGL_ARB_buffer_region</code>   */
  public long wglCreateBufferRegionARB(long hDC, int iLayerPlane, int uType);

  /** Entry point to C language function: <code> HANDLE wglCreateContextAttribsARB(HANDLE hDC, HANDLE hshareContext, const int *  attribList); </code> <br>Part of <code>WGL_ARB_create_context</code>
      @param attribList a direct or array-backed {@link java.nio.IntBuffer}   */
  public long wglCreateContextAttribsARB(long hDC, long hshareContext, IntBuffer attribList);

  /** Entry point to C language function: <code> HANDLE wglCreateContextAttribsARB(HANDLE hDC, HANDLE hshareContext, const int *  attribList); </code> <br>Part of <code>WGL_ARB_create_context</code>   */
  public long wglCreateContextAttribsARB(long hDC, long hshareContext, int[] attribList, int attribList_offset);

  /** Entry point to C language function: <code> GLboolean wglCreateDisplayColorTableEXT(GLushort id); </code> <br>Part of <code>WGL_EXT_display_color_table</code>   */
  public boolean wglCreateDisplayColorTableEXT(short id);

  /** Entry point to C language function: <code> HANDLE wglCreatePbufferARB(HANDLE hDC, int iPixelFormat, int iWidth, int iHeight, const int *  piAttribList); </code> <br>Part of <code>WGL_ARB_pbuffer</code>
      @param piAttribList a direct or array-backed {@link java.nio.IntBuffer}   */
  public long wglCreatePbufferARB(long hDC, int iPixelFormat, int iWidth, int iHeight, IntBuffer piAttribList);

  /** Entry point to C language function: <code> HANDLE wglCreatePbufferARB(HANDLE hDC, int iPixelFormat, int iWidth, int iHeight, const int *  piAttribList); </code> <br>Part of <code>WGL_ARB_pbuffer</code>   */
  public long wglCreatePbufferARB(long hDC, int iPixelFormat, int iWidth, int iHeight, int[] piAttribList, int piAttribList_offset);

  /** Entry point to C language function: <code> HANDLE wglCreatePbufferEXT(HANDLE hDC, int iPixelFormat, int iWidth, int iHeight, const int *  piAttribList); </code> <br>Part of <code>WGL_EXT_pbuffer</code>
      @param piAttribList a direct or array-backed {@link java.nio.IntBuffer}   */
  public long wglCreatePbufferEXT(long hDC, int iPixelFormat, int iWidth, int iHeight, IntBuffer piAttribList);

  /** Entry point to C language function: <code> HANDLE wglCreatePbufferEXT(HANDLE hDC, int iPixelFormat, int iWidth, int iHeight, const int *  piAttribList); </code> <br>Part of <code>WGL_EXT_pbuffer</code>   */
  public long wglCreatePbufferEXT(long hDC, int iPixelFormat, int iWidth, int iHeight, int[] piAttribList, int piAttribList_offset);

  /** Entry point to C language function: <code> void wglDeleteBufferRegionARB(HANDLE hRegion); </code> <br>Part of <code>WGL_ARB_buffer_region</code>   */
  public void wglDeleteBufferRegionARB(long hRegion);

  /** Entry point to C language function: <code> void wglDestroyDisplayColorTableEXT(GLushort factor); </code> <br>Part of <code>WGL_EXT_display_color_table</code>   */
  public void wglDestroyDisplayColorTableEXT(short factor);

  /** Entry point to C language function: <code> BOOL wglDestroyPbufferARB(HANDLE hPbuffer); </code> <br>Part of <code>WGL_ARB_pbuffer</code>   */
  public boolean wglDestroyPbufferARB(long hPbuffer);

  /** Entry point to C language function: <code> BOOL wglDestroyPbufferEXT(HANDLE hPbuffer); </code> <br>Part of <code>WGL_EXT_pbuffer</code>   */
  public boolean wglDestroyPbufferEXT(long hPbuffer);

  /** Entry point to C language function: <code> BOOL wglDisableFrameLockI3D(void); </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code>   */
  public boolean wglDisableFrameLockI3D();

  /** Entry point to C language function: <code> BOOL wglEnableFrameLockI3D(void); </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code>   */
  public boolean wglEnableFrameLockI3D();

  /** Entry point to C language function: <code> BOOL wglEndFrameTrackingI3D(void); </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code>   */
  public boolean wglEndFrameTrackingI3D();

  /** Entry point to C language function: <code> void wglFreeMemoryNV(LPVOID hRegion); </code> <br>Part of <code>WGL_NV_vertex_array_range</code>
      @param hRegion a direct only {@link java.nio.Buffer}   */
  public void wglFreeMemoryNV(Buffer hRegion);

  /** Entry point to C language function: <code> HANDLE wglGetCurrentReadDCARB(void); </code> <br>Part of <code>WGL_ARB_make_current_read</code>   */
  public long wglGetCurrentReadDC();

  /** Entry point to C language function: <code> LPCSTR wglGetExtensionsStringARB(HANDLE hdc); </code> <br>Part of <code>WGL_ARB_extensions_string</code>   */
  public String wglGetExtensionsStringARB(long hdc);

  /** Entry point to C language function: <code> LPCSTR wglGetExtensionsStringEXT(void); </code> <br>Part of <code>WGL_EXT_extensions_string</code>   */
  public String wglGetExtensionsStringEXT();

  /** Entry point to C language function: <code> BOOL wglGetFrameUsageI3D(float *  pUsage); </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code>
      @param pUsage a direct or array-backed {@link java.nio.FloatBuffer}   */
  public boolean wglGetFrameUsageI3D(FloatBuffer pUsage);

  /** Entry point to C language function: <code> BOOL wglGetFrameUsageI3D(float *  pUsage); </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code>   */
  public boolean wglGetFrameUsageI3D(float[] pUsage, int pUsage_offset);

  /** Entry point to C language function: <code> HANDLE wglGetPbufferDCARB(HANDLE hPbuffer); </code> <br>Part of <code>WGL_ARB_pbuffer</code>   */
  public long wglGetPbufferDCARB(long hPbuffer);

  /** Entry point to C language function: <code> HANDLE wglGetPbufferDCEXT(HANDLE hPbuffer); </code> <br>Part of <code>WGL_EXT_pbuffer</code>   */
  public long wglGetPbufferDCEXT(long hPbuffer);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribfvARB(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *  piAttributes, FLOAT *  pfValues); </code> <br>Part of <code>WGL_ARB_pixel_format</code>
      @param piAttributes a direct or array-backed {@link java.nio.IntBuffer}
      @param pfValues a direct or array-backed {@link java.nio.FloatBuffer}   */
  public boolean wglGetPixelFormatAttribfvARB(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, FloatBuffer pfValues);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribfvARB(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *  piAttributes, FLOAT *  pfValues); </code> <br>Part of <code>WGL_ARB_pixel_format</code>   */
  public boolean wglGetPixelFormatAttribfvARB(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, int[] piAttributes, int piAttributes_offset, float[] pfValues, int pfValues_offset);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribfvEXT(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *  piAttributes, FLOAT *  pfValues); </code> <br>Part of <code>WGL_EXT_pixel_format</code>
      @param piAttributes a direct or array-backed {@link java.nio.IntBuffer}
      @param pfValues a direct or array-backed {@link java.nio.FloatBuffer}   */
  public boolean wglGetPixelFormatAttribfvEXT(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, FloatBuffer pfValues);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribfvEXT(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *  piAttributes, FLOAT *  pfValues); </code> <br>Part of <code>WGL_EXT_pixel_format</code>   */
  public boolean wglGetPixelFormatAttribfvEXT(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, int[] piAttributes, int piAttributes_offset, float[] pfValues, int pfValues_offset);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribivARB(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *  piAttributes, int *  piValues); </code> <br>Part of <code>WGL_ARB_pixel_format</code>
      @param piAttributes a direct or array-backed {@link java.nio.IntBuffer}
      @param piValues a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglGetPixelFormatAttribivARB(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, IntBuffer piValues);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribivARB(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, const int *  piAttributes, int *  piValues); </code> <br>Part of <code>WGL_ARB_pixel_format</code>   */
  public boolean wglGetPixelFormatAttribivARB(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, int[] piAttributes, int piAttributes_offset, int[] piValues, int piValues_offset);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribivEXT(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *  piAttributes, int *  piValues); </code> <br>Part of <code>WGL_EXT_pixel_format</code>
      @param piAttributes a direct or array-backed {@link java.nio.IntBuffer}
      @param piValues a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglGetPixelFormatAttribivEXT(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, IntBuffer piAttributes, IntBuffer piValues);

  /** Entry point to C language function: <code> BOOL wglGetPixelFormatAttribivEXT(HANDLE hdc, int iPixelFormat, int iLayerPlane, UINT nAttributes, int *  piAttributes, int *  piValues); </code> <br>Part of <code>WGL_EXT_pixel_format</code>   */
  public boolean wglGetPixelFormatAttribivEXT(long hdc, int iPixelFormat, int iLayerPlane, int nAttributes, int[] piAttributes, int piAttributes_offset, int[] piValues, int piValues_offset);

  /** Entry point to C language function: <code> int wglGetSwapIntervalEXT(void); </code> <br>Part of <code>WGL_EXT_swap_control</code>   */
  public int wglGetSwapIntervalEXT();

  /** Entry point to C language function: <code> BOOL wglIsEnabledFrameLockI3D(BOOL *  marker_p); </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code>
      @param marker_p a direct or array-backed {@link java.nio.ByteBuffer}   */
  public boolean wglIsEnabledFrameLockI3D(ByteBuffer marker_p);

  /** Entry point to C language function: <code> BOOL wglIsEnabledFrameLockI3D(BOOL *  marker_p); </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code>   */
  public boolean wglIsEnabledFrameLockI3D(byte[] marker_p, int marker_p_offset);

  /** Entry point to C language function: <code> BOOL wglJoinSwapGroupNV(HANDLE hDC, GLuint group); </code> <br>Part of <code>WGL_NV_swap_group</code>   */
  public boolean wglJoinSwapGroupNV(long hDC, int group);

  /** Entry point to C language function: <code> GLboolean wglLoadDisplayColorTableEXT(const GLushort *  table, GLuint length); </code> <br>Part of <code>WGL_EXT_display_color_table</code>
      @param table a direct or array-backed {@link java.nio.ShortBuffer}   */
  public boolean wglLoadDisplayColorTableEXT(ShortBuffer table, int length);

  /** Entry point to C language function: <code> GLboolean wglLoadDisplayColorTableEXT(const GLushort *  table, GLuint length); </code> <br>Part of <code>WGL_EXT_display_color_table</code>   */
  public boolean wglLoadDisplayColorTableEXT(short[] table, int table_offset, int length);

  /** Entry point to C language function: <code> BOOL wglMakeContextCurrentARB(HANDLE hDrawDC, HANDLE hReadDC, HANDLE hglrc); </code> <br>Part of <code>WGL_ARB_make_current_read</code>   */
  public boolean wglMakeContextCurrent(long hDrawDC, long hReadDC, long hglrc);

  /** Entry point to C language function: <code> BOOL wglQueryFrameCountNV(HANDLE hDC, GLuint *  count); </code> <br>Part of <code>WGL_NV_swap_group</code>
      @param count a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglQueryFrameCountNV(long hDC, IntBuffer count);

  /** Entry point to C language function: <code> BOOL wglQueryFrameCountNV(HANDLE hDC, GLuint *  count); </code> <br>Part of <code>WGL_NV_swap_group</code>   */
  public boolean wglQueryFrameCountNV(long hDC, int[] count, int count_offset);

  /** Entry point to C language function: <code> BOOL wglQueryFrameLockMasterI3D(BOOL *  marker_p); </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code>
      @param marker_p a direct or array-backed {@link java.nio.ByteBuffer}   */
  public boolean wglQueryFrameLockMasterI3D(ByteBuffer marker_p);

  /** Entry point to C language function: <code> BOOL wglQueryFrameLockMasterI3D(BOOL *  marker_p); </code> <br>Part of <code>WGL_I3D_swap_frame_lock</code>   */
  public boolean wglQueryFrameLockMasterI3D(byte[] marker_p, int marker_p_offset);

  /** Entry point to C language function: <code> BOOL wglQueryFrameTrackingI3D(DWORD *  pFrameCount, DWORD *  pMissedFrames, float *  pLastMissedUsage); </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code>
      @param pFrameCount a direct or array-backed {@link java.nio.IntBuffer}
      @param pMissedFrames a direct or array-backed {@link java.nio.IntBuffer}
      @param pLastMissedUsage a direct or array-backed {@link java.nio.FloatBuffer}   */
  public boolean wglQueryFrameTrackingI3D(IntBuffer pFrameCount, IntBuffer pMissedFrames, FloatBuffer pLastMissedUsage);

  /** Entry point to C language function: <code> BOOL wglQueryFrameTrackingI3D(DWORD *  pFrameCount, DWORD *  pMissedFrames, float *  pLastMissedUsage); </code> <br>Part of <code>WGL_I3D_swap_frame_usage</code>   */
  public boolean wglQueryFrameTrackingI3D(int[] pFrameCount, int pFrameCount_offset, int[] pMissedFrames, int pMissedFrames_offset, float[] pLastMissedUsage, int pLastMissedUsage_offset);

  /** Entry point to C language function: <code> BOOL wglQueryMaxSwapGroupsNV(HANDLE hDC, GLuint *  maxGroups, GLuint *  maxBarriers); </code> <br>Part of <code>WGL_NV_swap_group</code>
      @param maxGroups a direct or array-backed {@link java.nio.IntBuffer}
      @param maxBarriers a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglQueryMaxSwapGroupsNV(long hDC, IntBuffer maxGroups, IntBuffer maxBarriers);

  /** Entry point to C language function: <code> BOOL wglQueryMaxSwapGroupsNV(HANDLE hDC, GLuint *  maxGroups, GLuint *  maxBarriers); </code> <br>Part of <code>WGL_NV_swap_group</code>   */
  public boolean wglQueryMaxSwapGroupsNV(long hDC, int[] maxGroups, int maxGroups_offset, int[] maxBarriers, int maxBarriers_offset);

  /** Entry point to C language function: <code> BOOL wglQueryPbufferARB(HANDLE hPbuffer, int iAttribute, int *  piValue); </code> <br>Part of <code>WGL_ARB_pbuffer</code>
      @param piValue a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglQueryPbufferARB(long hPbuffer, int iAttribute, IntBuffer piValue);

  /** Entry point to C language function: <code> BOOL wglQueryPbufferARB(HANDLE hPbuffer, int iAttribute, int *  piValue); </code> <br>Part of <code>WGL_ARB_pbuffer</code>   */
  public boolean wglQueryPbufferARB(long hPbuffer, int iAttribute, int[] piValue, int piValue_offset);

  /** Entry point to C language function: <code> BOOL wglQueryPbufferEXT(HANDLE hPbuffer, int iAttribute, int *  piValue); </code> <br>Part of <code>WGL_EXT_pbuffer</code>
      @param piValue a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglQueryPbufferEXT(long hPbuffer, int iAttribute, IntBuffer piValue);

  /** Entry point to C language function: <code> BOOL wglQueryPbufferEXT(HANDLE hPbuffer, int iAttribute, int *  piValue); </code> <br>Part of <code>WGL_EXT_pbuffer</code>   */
  public boolean wglQueryPbufferEXT(long hPbuffer, int iAttribute, int[] piValue, int piValue_offset);

  /** Entry point to C language function: <code> BOOL wglQuerySwapGroupNV(HANDLE hDC, GLuint *  group, GLuint *  barrier); </code> <br>Part of <code>WGL_NV_swap_group</code>
      @param group a direct or array-backed {@link java.nio.IntBuffer}
      @param barrier a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglQuerySwapGroupNV(long hDC, IntBuffer group, IntBuffer barrier);

  /** Entry point to C language function: <code> BOOL wglQuerySwapGroupNV(HANDLE hDC, GLuint *  group, GLuint *  barrier); </code> <br>Part of <code>WGL_NV_swap_group</code>   */
  public boolean wglQuerySwapGroupNV(long hDC, int[] group, int group_offset, int[] barrier, int barrier_offset);

  /** Entry point to C language function: <code> int wglReleasePbufferDCARB(HANDLE hPbuffer, HANDLE hDC); </code> <br>Part of <code>WGL_ARB_pbuffer</code>   */
  public int wglReleasePbufferDCARB(long hPbuffer, long hDC);

  /** Entry point to C language function: <code> int wglReleasePbufferDCEXT(HANDLE hPbuffer, HANDLE hDC); </code> <br>Part of <code>WGL_EXT_pbuffer</code>   */
  public int wglReleasePbufferDCEXT(long hPbuffer, long hDC);

  /** Entry point to C language function: <code> BOOL wglReleaseTexImageARB(HANDLE hPbuffer, int iBuffer); </code> <br>Part of <code>WGL_ARB_render_texture</code>   */
  public boolean wglReleaseTexImageARB(long hPbuffer, int iBuffer);

  /** Entry point to C language function: <code> BOOL wglResetFrameCountNV(HANDLE hDC); </code> <br>Part of <code>WGL_NV_swap_group</code>   */
  public boolean wglResetFrameCountNV(long hDC);

  /** Entry point to C language function: <code> BOOL wglRestoreBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height, int xSrc, int ySrc); </code> <br>Part of <code>WGL_ARB_buffer_region</code>   */
  public boolean wglRestoreBufferRegionARB(long hRegion, int x, int y, int width, int height, int xSrc, int ySrc);

  /** Entry point to C language function: <code> BOOL wglSaveBufferRegionARB(HANDLE hRegion, int x, int y, int width, int height); </code> <br>Part of <code>WGL_ARB_buffer_region</code>   */
  public boolean wglSaveBufferRegionARB(long hRegion, int x, int y, int width, int height);

  /** Entry point to C language function: <code> BOOL wglSetPbufferAttribARB(HANDLE hPbuffer, const int *  piAttribList); </code> <br>Part of <code>WGL_ARB_render_texture</code>
      @param piAttribList a direct or array-backed {@link java.nio.IntBuffer}   */
  public boolean wglSetPbufferAttribARB(long hPbuffer, IntBuffer piAttribList);

  /** Entry point to C language function: <code> BOOL wglSetPbufferAttribARB(HANDLE hPbuffer, const int *  piAttribList); </code> <br>Part of <code>WGL_ARB_render_texture</code>   */
  public boolean wglSetPbufferAttribARB(long hPbuffer, int[] piAttribList, int piAttribList_offset);

  /** Entry point to C language function: <code> BOOL wglSwapIntervalEXT(int interval); </code> <br>Part of <code>WGL_EXT_swap_control</code>   */
  public boolean wglSwapIntervalEXT(int interval);


  // --- Begin CustomJavaCode .cfg declarations
      public boolean isFunctionAvailable(String glFunctionName);
      public boolean isExtensionAvailable(String glExtensionName);
  // ---- End CustomJavaCode .cfg declarations

} // end of class WGLExt
