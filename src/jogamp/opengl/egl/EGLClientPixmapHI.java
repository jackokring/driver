/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/opengl/GLEmitter.java on Fri Aug 03 06:28:32 CEST 2012 ----! */


package jogamp.opengl.egl;

import java.nio.*;

import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import jogamp.common.os.MachineDescriptionRuntime;

import java.util.*;
import javax.media.opengl.*;
import javax.media.opengl.fixedfunc.*;
import jogamp.opengl.*;

public class EGLClientPixmapHI {

  StructAccessor accessor;

  private static final int mdIdx = MachineDescriptionRuntime.getStatic().ordinal();

  private static final int[] EGLClientPixmapHI_size = new int[] { 16 /* ARMle_EABI */, 16 /* X86_32_UNIX */, 24 /* X86_64_UNIX */, 16 /* X86_32_MACOS */, 16 /* X86_32_WINDOWS */, 24 /* X86_64_WINDOWS */  };
  private static final int[] iWidth_offset = new int[] { 4 /* ARMle_EABI */, 4 /* X86_32_UNIX */, 8 /* X86_64_UNIX */, 4 /* X86_32_MACOS */, 4 /* X86_32_WINDOWS */, 8 /* X86_64_WINDOWS */ };
  private static final int[] iHeight_offset = new int[] { 8 /* ARMle_EABI */, 8 /* X86_32_UNIX */, 12 /* X86_64_UNIX */, 8 /* X86_32_MACOS */, 8 /* X86_32_WINDOWS */, 12 /* X86_64_WINDOWS */ };
  private static final int[] iStride_offset = new int[] { 12 /* ARMle_EABI */, 12 /* X86_32_UNIX */, 16 /* X86_64_UNIX */, 12 /* X86_32_MACOS */, 12 /* X86_32_WINDOWS */, 16 /* X86_64_WINDOWS */ };

  public static int size() {
    return EGLClientPixmapHI_size[mdIdx];
  }

  public static EGLClientPixmapHI create() {
    return create(Buffers.newDirectByteBuffer(size()));
  }

  public static EGLClientPixmapHI create(java.nio.ByteBuffer buf) {
      return new EGLClientPixmapHI(buf);
  }

  EGLClientPixmapHI(java.nio.ByteBuffer buf) {
    accessor = new StructAccessor(buf);
  }

  public java.nio.ByteBuffer getBuffer() {
    return accessor.getBuffer();
  }

  public EGLClientPixmapHI setIWidth(int val) {
    accessor.setIntAt(iWidth_offset[mdIdx], val);
    return this;
  }

  public int getIWidth() {
    return accessor.getIntAt(iWidth_offset[mdIdx]);
  }

  public EGLClientPixmapHI setIHeight(int val) {
    accessor.setIntAt(iHeight_offset[mdIdx], val);
    return this;
  }

  public int getIHeight() {
    return accessor.getIntAt(iHeight_offset[mdIdx]);
  }

  public EGLClientPixmapHI setIStride(int val) {
    accessor.setIntAt(iStride_offset[mdIdx], val);
    return this;
  }

  public int getIStride() {
    return accessor.getIntAt(iStride_offset[mdIdx]);
  }
}
