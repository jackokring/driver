/* !---- DO NOT EDIT: This file autogenerated by com/jogamp/gluegen/JavaEmitter.java on Fri Aug 03 06:26:16 CEST 2012 ----! */


package jogamp.nativewindow.windows;

import java.nio.*;

import com.jogamp.gluegen.runtime.*;
import com.jogamp.common.os.*;
import com.jogamp.common.nio.*;
import jogamp.common.os.MachineDescriptionRuntime;

import javax.media.nativewindow.util.Point;
import javax.media.nativewindow.NativeWindowException;
import jogamp.nativewindow.NWJNILibLoader;
import jogamp.nativewindow.Debug;

public class RGBQUAD {

  StructAccessor accessor;

  private static final int mdIdx = MachineDescriptionRuntime.getStatic().ordinal();

  private static final int[] RGBQUAD_size = new int[] { 4 /* ARMle_EABI */, 4 /* X86_32_UNIX */, 4 /* X86_64_UNIX */, 4 /* X86_32_MACOS */, 4 /* X86_32_WINDOWS */, 4 /* X86_64_WINDOWS */  };
  private static final int[] rgbBlue_offset = new int[] { 0 /* ARMle_EABI */, 0 /* X86_32_UNIX */, 0 /* X86_64_UNIX */, 0 /* X86_32_MACOS */, 0 /* X86_32_WINDOWS */, 0 /* X86_64_WINDOWS */ };
  private static final int[] rgbGreen_offset = new int[] { 1 /* ARMle_EABI */, 1 /* X86_32_UNIX */, 1 /* X86_64_UNIX */, 1 /* X86_32_MACOS */, 1 /* X86_32_WINDOWS */, 1 /* X86_64_WINDOWS */ };
  private static final int[] rgbRed_offset = new int[] { 2 /* ARMle_EABI */, 2 /* X86_32_UNIX */, 2 /* X86_64_UNIX */, 2 /* X86_32_MACOS */, 2 /* X86_32_WINDOWS */, 2 /* X86_64_WINDOWS */ };
  private static final int[] rgbReserved_offset = new int[] { 3 /* ARMle_EABI */, 3 /* X86_32_UNIX */, 3 /* X86_64_UNIX */, 3 /* X86_32_MACOS */, 3 /* X86_32_WINDOWS */, 3 /* X86_64_WINDOWS */ };

  public static int size() {
    return RGBQUAD_size[mdIdx];
  }

  public static RGBQUAD create() {
    return create(Buffers.newDirectByteBuffer(size()));
  }

  public static RGBQUAD create(java.nio.ByteBuffer buf) {
      return new RGBQUAD(buf);
  }

  RGBQUAD(java.nio.ByteBuffer buf) {
    accessor = new StructAccessor(buf);
  }

  public java.nio.ByteBuffer getBuffer() {
    return accessor.getBuffer();
  }

  public RGBQUAD setRgbBlue(byte val) {
    accessor.setByteAt(rgbBlue_offset[mdIdx], val);
    return this;
  }

  public byte getRgbBlue() {
    return accessor.getByteAt(rgbBlue_offset[mdIdx]);
  }

  public RGBQUAD setRgbGreen(byte val) {
    accessor.setByteAt(rgbGreen_offset[mdIdx], val);
    return this;
  }

  public byte getRgbGreen() {
    return accessor.getByteAt(rgbGreen_offset[mdIdx]);
  }

  public RGBQUAD setRgbRed(byte val) {
    accessor.setByteAt(rgbRed_offset[mdIdx], val);
    return this;
  }

  public byte getRgbRed() {
    return accessor.getByteAt(rgbRed_offset[mdIdx]);
  }

  public RGBQUAD setRgbReserved(byte val) {
    accessor.setByteAt(rgbReserved_offset[mdIdx], val);
    return this;
  }

  public byte getRgbReserved() {
    return accessor.getByteAt(rgbReserved_offset[mdIdx]);
  }
}
