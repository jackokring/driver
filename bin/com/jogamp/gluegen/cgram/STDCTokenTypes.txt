// $ANTLR 2.7.7 (2006-11-01): StdCParser.g -> STDCTokenTypes.txt$
STDC    // output token vocab name
LITERAL_typedef="typedef"=4
LITERAL_asm="asm"=5
LITERAL_volatile="volatile"=6
LCURLY=7
RCURLY=8
SEMI=9
LITERAL_struct="struct"=10
LITERAL_union="union"=11
LITERAL_enum="enum"=12
LITERAL_auto="auto"=13
LITERAL_register="register"=14
LITERAL_extern="extern"=15
LITERAL_static="static"=16
LITERAL_const="const"=17
LITERAL_void="void"=18
LITERAL_char="char"=19
LITERAL_short="short"=20
LITERAL_int="int"=21
LITERAL_long="long"=22
LITERAL_float="float"=23
LITERAL_double="double"=24
LITERAL_signed="signed"=25
LITERAL_unsigned="unsigned"=26
"int8_t"=27
"uint8_t"=28
"int16_t"=29
"uint16_t"=30
"__int32"=31
"int32_t"=32
LITERAL_wchar_t="wchar_t"=33
"uint32_t"=34
"__int64"=35
"int64_t"=36
"uint64_t"=37
LITERAL_ptrdiff_t="ptrdiff_t"=38
LITERAL_intptr_t="intptr_t"=39
LITERAL_size_t="size_t"=40
LITERAL_uintptr_t="uintptr_t"=41
ID=42
COMMA=43
COLON=44
ASSIGN=45
STAR=46
LPAREN=47
RPAREN=48
LBRACKET=49
RBRACKET=50
VARARGS=51
LITERAL_while="while"=52
LITERAL_do="do"=53
LITERAL_for="for"=54
LITERAL_goto="goto"=55
LITERAL_continue="continue"=56
LITERAL_break="break"=57
LITERAL_return="return"=58
LITERAL_case="case"=59
LITERAL_default="default"=60
LITERAL_if="if"=61
LITERAL_else="else"=62
LITERAL_switch="switch"=63
DIV_ASSIGN=64
PLUS_ASSIGN=65
MINUS_ASSIGN=66
STAR_ASSIGN=67
MOD_ASSIGN=68
RSHIFT_ASSIGN=69
LSHIFT_ASSIGN=70
BAND_ASSIGN=71
BOR_ASSIGN=72
BXOR_ASSIGN=73
QUESTION=74
LOR=75
LAND=76
BOR=77
BXOR=78
BAND=79
EQUAL=80
NOT_EQUAL=81
LT=82
LTE=83
GT=84
GTE=85
LSHIFT=86
RSHIFT=87
PLUS=88
MINUS=89
DIV=90
MOD=91
INC=92
DEC=93
LITERAL_sizeof="sizeof"=94
BNOT=95
LNOT=96
PTR=97
DOT=98
CharLiteral=99
StringLiteral=100
IntOctalConst=101
LongOctalConst=102
UnsignedOctalConst=103
IntIntConst=104
LongIntConst=105
UnsignedIntConst=106
IntHexConst=107
LongHexConst=108
UnsignedHexConst=109
FloatDoubleConst=110
DoubleDoubleConst=111
LongDoubleConst=112
NTypedefName=113
NInitDecl=114
NDeclarator=115
NStructDeclarator=116
NDeclaration=117
NCast=118
NPointerGroup=119
NExpressionGroup=120
NFunctionCallArgs=121
NNonemptyAbstractDeclarator=122
NInitializer=123
NStatementExpr=124
NEmptyExpression=125
NParameterTypeList=126
NFunctionDef=127
NCompoundStatement=128
NParameterDeclaration=129
NCommaExpr=130
NUnaryExpr=131
NLabel=132
NPostfixExpr=133
NRangeExpr=134
NStringSeq=135
NInitializerElementLabel=136
NLcurlyInitializer=137
NAsmAttribute=138
NGnuAsmExpr=139
NTypeMissing=140
Vocabulary=141
Whitespace=142
Comment=143
CPPComment=144
NonWhitespace=145
PREPROC_DIRECTIVE("a line directive")=146
DefineExpr=147
DefineExpr2=148
Space=149
LineDirective=150
BadStringLiteral=151
Escape=152
Digit=153
LongSuffix=154
UnsignedSuffix=155
FloatSuffix=156
Exponent=157
Number=158
